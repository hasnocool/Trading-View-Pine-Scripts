Script Name: Master Pattern [LuxAlgo]
Author: LuxAlgo
Description: The Master Pattern indicator is derived from the framework proposed by Wyckoff and automatically displays major/minor patterns and their associated expansion lines on the chart.

Liquidity levels are also included and can be used as targets/stops. Note that the Liquidity levels are plotted retrospectively as they are based on pivots.

ğŸ”¶  USAGE 

  

The Master...
PineScript code:

Pine Scriptâ„¢ indicator
Master Pattern [LuxAlgo]
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
//Â ThisÂ workÂ isÂ licensedÂ underÂ aÂ Attribution-NonCommercial-ShareAlikeÂ 4.0Â InternationalÂ (CCÂ BY-NC-SAÂ 4.0)Â https://creativecommons.org/licenses/by-nc-sa/4.0/
//Â Â©Â LuxAlgo
//@version=5
indicator("MasterÂ PatternÂ [LuxAlgo]",Â "LuxAlgoÂ -Â MasterÂ PatternÂ Indicator",Â overlayÂ =Â true,Â max_boxes_countÂ =Â 500,Â max_lines_countÂ =Â 500)
//------------------------------------------------------------------------------
//Settings
//-----------------------------------------------------------------------------{
lengthÂ =Â input.int(3,Â 'ContractionÂ DetectionÂ Lookback',Â minvalÂ =Â 1)
liqLengthÂ =Â input.int(20,Â 'LiquidityÂ Levels',Â minvalÂ =Â 1)
showMajorÂ =Â input(true,Â 'ShowÂ MajorÂ Pattern')
showMinorÂ =Â input(true,Â 'ShowÂ MinorÂ Pattern')
//Style
bullCssÂ =Â input.color(color.teal,Â 'BullishÂ Pattern',Â inlineÂ =Â 'bull',Â groupÂ =Â 'PatternÂ Style')
showBullBoxÂ =Â input(true,Â 'Area',Â inlineÂ =Â 'bull',Â groupÂ =Â 'PatternÂ Style')
showBullLvlÂ =Â input(true,Â 'Line',Â inlineÂ =Â 'bull',Â groupÂ =Â 'PatternÂ Style')
bearCssÂ =Â input.color(color.red,Â 'BearishÂ Pattern',Â inlineÂ =Â 'bear',Â groupÂ =Â 'PatternÂ Style')
showBearBoxÂ =Â input(true,Â 'Area',Â inlineÂ =Â 'bear',Â groupÂ =Â 'PatternÂ Style')
showBearLvlÂ =Â input(true,Â 'Line',Â inlineÂ =Â 'bear',Â groupÂ =Â 'PatternÂ Style')
//LiquidityÂ Style
showLiqÂ =Â input(true,Â 'ShowÂ LiquidityÂ Levels',Â groupÂ =Â 'Liquidity')
bullLiqCssÂ =Â input.color(color.teal,Â 'UpperÂ Liquidity',Â groupÂ =Â 'Liquidity')
bearLiqCssÂ =Â input.color(color.red,Â 'LowerÂ Liquidity',Â groupÂ =Â 'Liquidity')
//-----------------------------------------------------------------------------}
//UDT
//-----------------------------------------------------------------------------{
typeÂ mp
Â Â Â Â boxÂ area
Â Â Â Â lineÂ avg
Â Â Â Â boolÂ breakup
Â Â Â Â boolÂ breakdn
//-----------------------------------------------------------------------------}
//DetectÂ contraction
//-----------------------------------------------------------------------------{
varÂ phyÂ =Â 0.,Â varÂ phxÂ =Â 0,Â varÂ phtÂ =Â 0.
varÂ plyÂ =Â 0.,Â varÂ plxÂ =Â 0,Â varÂ pltÂ =Â 0.
varÂ floatÂ topÂ =Â na
varÂ floatÂ btmÂ =Â na
nÂ =Â bar_index
phÂ =Â ta.pivothigh(length,Â length)
plÂ =Â ta.pivotlow(length,Â length)
ifÂ ph
Â Â Â Â phtÂ :=Â math.sign(phÂ -Â phy)
Â Â Â Â phyÂ :=Â ph
Â Â Â Â ifÂ phtÂ ==Â -1Â andÂ pltÂ ==Â 1
Â Â Â Â Â Â Â Â topÂ :=Â ph
Â Â Â Â Â Â Â Â btmÂ :=Â ply
Â Â Â Â Â Â Â Â phxÂ :=Â n-length
ifÂ pl
Â Â Â Â pltÂ :=Â math.sign(plÂ -Â ply)
Â Â Â Â plyÂ :=Â pl
Â Â Â Â ifÂ phtÂ Â ==Â -1Â andÂ pltÂ ==Â 1
Â Â Â Â Â Â Â Â topÂ :=Â phy
Â Â Â Â Â Â Â Â btmÂ :=Â pl
Â Â Â Â Â Â Â Â plxÂ :=Â n-length
//-----------------------------------------------------------------------------}
//SetÂ pattern
//-----------------------------------------------------------------------------{
varÂ mpÂ masterÂ =Â mp.new()
//DetectÂ masterÂ pattern
isbullÂ =Â high[length]Â >Â topÂ andÂ topÂ >Â btm
isbearÂ =Â low[length]Â <Â btmÂ andÂ topÂ >Â btm
ifÂ isbullÂ orÂ isbear
Â Â Â Â cssÂ =Â isbullÂ ?Â bullCssÂ :Â bearCss
Â Â Â Â master.avg.set_x2(n-length)
Â Â Â Â valÂ =Â math.avg(top,Â btm)
Â Â Â Â //CreateÂ newÂ masterÂ patternÂ object
Â Â Â Â masterÂ :=Â mp.new(
Â Â Â Â Â Â (isbullÂ andÂ showBullBox)Â orÂ (isbearÂ andÂ showBearBox)Â ?Â box.new(math.max(phx,Â plx),Â top,Â n-length,Â btm,Â na,Â bgcolorÂ =Â showMinorÂ ?Â color.new(css,Â 50)Â :Â na)Â :Â na
Â Â Â Â Â Â ,Â (isbullÂ andÂ showBullLvl)Â orÂ (isbearÂ andÂ showBearLvl)Â ?Â line.new(n-length,Â val,Â n,Â val,Â colorÂ =Â showMinorÂ ?Â cssÂ :Â na)Â :Â na
Â Â Â Â Â Â ,Â isbull
Â Â Â Â Â Â ,Â isbear)
Â Â Â Â topÂ :=Â na
Â Â Â Â btmÂ :=Â na
//DetermineÂ ifÂ patternÂ switchÂ toÂ major
ifÂ master.breakup
Â Â Â Â ifÂ lowÂ <Â master.area.get_bottom()
Â Â Â Â Â Â Â Â ifÂ notÂ showMajor
Â Â Â Â Â Â Â Â Â Â Â Â master.area.delete()
Â Â Â Â Â Â Â Â Â Â Â Â master.avg.delete()
Â Â Â Â Â Â Â Â else
Â Â Â Â Â Â Â Â Â Â Â Â master.area.set_border_color(bullCss)
Â Â Â Â Â Â Â Â Â Â Â Â ifÂ notÂ showMinor
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â master.area.set_bgcolor(color.new(bullCss,Â 50))
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â master.avg.set_color(bullCss)
elseÂ ifÂ master.breakdn
Â Â Â Â ifÂ highÂ >Â master.area.get_top()
Â Â Â Â Â Â Â Â ifÂ notÂ showMajor
Â Â Â Â Â Â Â Â Â Â Â Â master.area.delete()
Â Â Â Â Â Â Â Â Â Â Â Â master.avg.delete()
Â Â Â Â Â Â Â Â else
Â Â Â Â Â Â Â Â Â Â Â Â master.area.set_border_color(bearCss)
Â Â Â Â Â Â Â Â Â Â Â Â ifÂ notÂ showMinor
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â master.area.set_bgcolor(color.new(bearCss,Â 50))
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â master.avg.set_color(bearCss)
//SetÂ frictionÂ levelÂ x2Â coordinateÂ toÂ currentÂ bar
ifÂ notÂ na(master.avg)
Â Â Â Â master.avg.set_x2(n)
//-----------------------------------------------------------------------------}
//LiquidityÂ levels
//-----------------------------------------------------------------------------{
varÂ lineÂ liqupÂ =Â na,Â varÂ liqup_reachÂ =Â false
varÂ lineÂ liqdnÂ =Â na,Â varÂ liqdn_reachÂ =Â false
liqphÂ =Â ta.pivothigh(liqLength,Â liqLength)
liqplÂ =Â ta.pivotlow(liqLength,Â liqLength)
//SetÂ upperÂ liquidity
ifÂ liqphÂ andÂ showLiq
Â Â Â Â ifÂ notÂ liqup_reach
Â Â Â Â Â Â Â Â liqup.set_x2(n-liqLength)
Â Â Â Â liqupÂ :=Â line.new(n-liqLength,Â liqph,Â n,Â liqph,Â colorÂ =Â bullLiqCss,Â styleÂ =Â line.style_dotted)
Â Â Â Â liqup_reachÂ :=Â false
elseÂ ifÂ notÂ liqup_reachÂ andÂ showLiq
Â Â Â Â liqup.set_x2(n)
Â Â Â Â ifÂ highÂ >Â liqup.get_y1()
Â Â Â Â Â Â Â Â liqup_reachÂ :=Â true
//SetÂ lowerÂ liquidity
ifÂ liqplÂ andÂ showLiq
Â Â Â Â ifÂ notÂ liqdn_reach
Â Â Â Â Â Â Â Â liqdn.set_x2(n-liqLength)
Â Â Â Â liqdnÂ :=Â line.new(n-liqLength,Â liqpl,Â n,Â liqpl,Â colorÂ =Â bearLiqCss,Â styleÂ =Â line.style_dotted)
Â Â Â Â liqdn_reachÂ :=Â false
elseÂ ifÂ notÂ liqdn_reachÂ andÂ showLiq
Â Â Â Â liqdn.set_x2(n)
Â Â Â Â ifÂ lowÂ <Â liqdn.get_y1()
Â Â Â Â Â Â Â Â liqdn_reachÂ :=Â true
//-----------------------------------------------------------------------------}
Expand (156 lines)