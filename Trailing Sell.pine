Script Name: Trailing Sell
Author: jason5480
Description: This script demonstrates how to do trailing sell. With this approach, given an exit signal, instead of selling directly, you just follow the price upwards (for long positions) and you sell when the price decreases by a small percentage. The order will be executed when the next bar is closed. This approach may increase the profits (slightly) in some strategies!...
PineScript code:

Pine Script™ strategy
Trailing Sell
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
//@version=5
//#region PREAMBLE 
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//  Copyright © 2022-2023 Iason Nikolas | jason5480
//  The "Trailing Exit" script (aka "Trailing Sell") may be freely distributed under the MIT license.
//  
//  Permission is hereby granted, free of charge,
//  to any person obtaining a copy of this software and associated documentation files (the "Software"),
//  to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge,
//  publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
//  is furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in ALL COPIES or substantial portions of
//  the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
//  OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
//  OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//  
//  Description
//  -----------------------------------------------------------------------------------------------------------------
//  This strategy will go long if fast MA crosses over slow MA.
//  If the order type is limit and the mode is trail then the strategy instead of exiting
//  from the position directly it will follow the high price upwards (percentagewise)
//  If the price raises by this percentage then the exit order will be executed.
//  If the order type is stop and the mode is trail then the strategy instead of entering
//  into the position directly it will follow the low price downwards (percentagewise)
//  If the price drops by this percentage then the exit order will be executed.
//  
//  -----------------------------------------------------------------------------------------------------------------
//  Disclaimer:
//    1. I am not licensed financial advisors or broker-dealer. I do not tell you when or what to buy or sell.
//       I developed this software which enables you execute manual or automated trades using TradingView.
//       The software allows you to set the criteria you want for entering and exiting trades.
//    2. Do not trade with money you cannot afford to lose.
//    3. I do not guarantee consistent profits or that anyone can make money with no effort.
//       And I am not selling the holy grail.
//    4. Every system can have winning and losing streaks.
//    5. Money management plays a large role in the results of your trading. For example: lot size, account size,
//       broker leverage, and broker margin call rules all affect on results. Also, your Take Profit and Stop Loss
//       settings for individual pair trades and for overall account equity have a major impact on results.
//       If you are new to trading and do not understand these items, then I recommend you seek educational materials
//       to further your knowledge.
//    
//  YOU NEED TO FIND AND USE THE TRADING SYSTEM THAT WORKS BEST FOR YOU AND YOUR TRADING TOLERANCE.
//  I HAVE PROVIDED NOTHING MORE THAN A TOOL WITH OPTIONS FOR YOU TO TRADE WITH THIS PROGRAM ON TRADINGVIEW.
//  
//  I accept suggestions to improve the script.
//  If you encounter any problems I will be happy to share with me.
//  -----------------------------------------------------------------------------------------------------------------
//#endregion ========================================================================================================
//#region SETUP
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
strategy(title = 'Trailing Exit',
         shorttitle = 'TEx',
         overlay = true,
         pyramiding = 0,
         default_qty_type = strategy.percent_of_equity,
         default_qty_value = 100,
         initial_capital = 100000,
         max_labels_count = 150)
//#endregion ========================================================================================================
//#region FILTERS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
import jason5480/time_filters/9 as tif
// INPUT ============================================================================================================
sourceTimezone = input.string(defval = 'Exchange', title = 'Timezones Src->Dst', options = ['Exchange', 'UTC', 'America/Los_Angeles', 'America/Phoenix', 'America/Vancouver', 'America/El_Salvador', 'America/Bogota', 'America/Chicago', 'America/New_York', 'America/Toronto', 'America/Argentina/Buenos_Aires', 'America/Sao_Paulo', 'Etc/UTC', 'Europe/London', 'Europe/Berlin', 'Europe/Madrid', 'Europe/Paris', 'Europe/Warsaw', 'Europe/Athens', 'Europe/Moscow', 'Asia/Tehran', 'Asia/Dubai', 'Asia/Ashkhabad', 'Asia/Kolkata', 'Asia/Almaty', 'Asia/Bangkok', 'Asia/Hong_Kong', 'Asia/Shanghai', 'Asia/Singapore', 'Asia/Taipei', 'Asia/Seoul', 'Asia/Tokyo', 'Australia/ACT', 'Australia/Adelaide', 'Australia/Brisbane', 'Australia/Sydney', 'Pacific/Auckland', 'Pacific/Fakaofo', 'Pacific/Chatham', 'Pacific/Honolulu'], inline = 'Timezone', group = 'Filters')
destinationTimezone = input.string(defval = 'Exchange', title = '->', options = ['Exchange', 'UTC', 'America/Los_Angeles', 'America/Phoenix', 'America/Vancouver', 'America/El_Salvador', 'America/Bogota', 'America/Chicago', 'America/New_York', 'America/Toronto', 'America/Argentina/Buenos_Aires', 'America/Sao_Paulo', 'Etc/UTC', 'Europe/London', 'Europe/Berlin', 'Europe/Madrid', 'Europe/Paris', 'Europe/Warsaw', 'Europe/Athens', 'Europe/Moscow', 'Asia/Tehran', 'Asia/Dubai', 'Asia/Ashkhabad', 'Asia/Kolkata', 'Asia/Almaty', 'Asia/Bangkok', 'Asia/Hong_Kong', 'Asia/Shanghai', 'Asia/Singapore', 'Asia/Taipei', 'Asia/Seoul', 'Asia/Tokyo', 'Australia/ACT', 'Australia/Adelaide', 'Australia/Brisbane', 'Australia/Sydney', 'Pacific/Auckland', 'Pacific/Fakaofo', 'Pacific/Chatham', 'Pacific/Honolulu'], tooltip = 'The Src is the source timezone to be used as a reference for the time settings. The Dst is the destination timezone to convert into (e.g. the charts\' timezone)', inline = 'Timezone', group = 'Filters')
var dateTimeWindow = tif.DateTimeWindow.new(
  fromDateTime = input.bool(defval = true, title = 'From', inline = 'From Date', group = 'Filters') ? input.time(defval = timestamp('01 Jan 2022 00:00'), title = '', inline = 'From Date', group = 'Filters') : na,
  toDateTime = input.bool(defval = false, title = 'To ', inline = 'To Date', group = 'Filters') ? input.time(defval = timestamp('01 Jan 2023 00:00'), title = '', inline = 'To Date', group = 'Filters') : na)
// LOGIC ============================================================================================================
bool dateFilterApproval = dateTimeWindow.is_in_range(srcTimezone = sourceTimezone, dstTimezone = destinationTimezone)
// PLOT =============================================================================================================
bgcolor(color = dateFilterApproval ? na : color.new(color.gray, 90), title = 'Time Window')
//#endregion ========================================================================================================
//#region STRATEGY
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
// INPUT ============================================================================================================
fastMALen = input.int(defval = 21, title = 'Fast/Slow SMA Length', minval = 1, inline = 'MA Length', group = 'Strategy')
slowMALen = input.int(defval = 49, title = '', minval = 1, tooltip = 'How many candles back to calculte the fast/slow SMA.', inline = 'MA Length', group = 'Strategy')
// LOGIC ============================================================================================================
float fastMA = ta.sma(close, fastMALen)
float slowMA = ta.sma(close, slowMALen)
bool openLongPosition = dateFilterApproval and ta.crossover(fastMA, slowMA)
bool closeLongPosition = ta.crossunder(fastMA, slowMA)
// PLOT =============================================================================================================
var fastColor = color.new(color.yellow, 0)
plot(series = fastMA, title = 'Fast SMA', color = fastColor, linewidth = 1, style = plot.style_line)
var slowColor = color.new(color.orange, 0)
plot(series = slowMA, title = 'Slow SMA', color = slowColor, linewidth = 1, style = plot.style_line)
//#endregion ========================================================================================================
//#region EXIT
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
// INPUT ============================================================================================================
exitOrderType = input.string(defval = 'STOP', title = 'Order Type', options = ['MARKET', 'LIMIT', 'STOP'], tooltip = 'Use market order to exit at the open of the next bar (MARKET), or use limit order to exit at a "better" price defined by the distance from the close price and the limit mode (LIMIT), or use stop market order to exit at a "worst" price defined by the distance from the close price and the limit mode (STOP). Limit and stop orders last until they are filled or canceled.', group = 'Exit')
exitLimitMode = input.string(defval = 'TRAIL', title = 'Limit Mode', options = ['FIXED', 'TRAIL'], tooltip = 'When you use limit or stop orders to exit, use a fixed price defined by the distance and the close price when the open signal s (FIXED), or trail by following the price to the direction of the exit for limit orders or the other direction of the exit for stop orders (TRAIL).', group = 'Exit')
exitDistPerc = input.float(defval = 3.0, title = '  Distance %', minval = 0.01, maxval = 100, step = 0.05, tooltip = 'The distance as a percentage of the close price when the close signal occured and the distance to keep from the high/low price when trailing.', group = 'Exit') / 100
// LOGIC ============================================================================================================
int barsSinceOpenLong = nz(ta.barssince(openLongPosition), 999999)
int barsSinceCloseLong = nz(ta.barssince(closeLongPosition), 999999)
int barsSinceExitLong = nz(ta.barssince(strategy.opentrades.size(strategy.opentrades - 1) <= 0 and strategy.opentrades.size(strategy.opentrades - 1)[1] > 0), 999999)
bool closeLongIsActive = barsSinceOpenLong > barsSinceCloseLong // open -> close
bool exitLongIsPending = barsSinceExitLong > barsSinceCloseLong // exit -> close
// the close signal when already into a long position
bool validCloseLongPosition = closeLongPosition and strategy.opentrades.size(strategy.opentrades - 1) > 0
var float longLimitOrStopExitPrice = na
bool isFirstValidCloseLongPosition = exitOrderType != 'MARKET' ? validCloseLongPosition and na(longLimitOrStopExitPrice[1]) : false
bool tryExitLongPosition = exitOrderType != 'MARKET' ? closeLongIsActive and exitLongIsPending and strategy.opentrades.size(strategy.opentrades - 1) > 0 : false
longLimitOrStopExitPrice := if (isFirstValidCloseLongPosition)
    if (exitOrderType == 'LIMIT')
        close * (1 + exitDistPerc)
    else if (exitOrderType == 'STOP')
        close * (1 - exitDistPerc)
else if (tryExitLongPosition)
    if (exitLimitMode == 'TRAIL' or (exitLimitMode == 'FIXED' and validCloseLongPosition))
        if (exitOrderType == 'LIMIT')
            math.min(low * (1 + exitDistPerc), nz(longLimitOrStopExitPrice[1], 999999.9))
        else if (exitOrderType == 'STOP')
            math.max(high * (1 - exitDistPerc), nz(longLimitOrStopExitPrice[1]))
    else
        nz(longLimitOrStopExitPrice[1])
else
    na
// PLOT =============================================================================================================
var exitColor = color.new(#D500F9, 0)
var textColor = color.new(color.white, 0)
if (validCloseLongPosition)
    label.new(x = bar_index, y = na, text = 'Close', yloc = yloc.abovebar, color = exitColor, style = label.style_label_down, textcolor = textColor)
plot(series = longLimitOrStopExitPrice, title = 'Long Tr Exit Price', color = exitColor, linewidth = 1, style = plot.style_linebr, offset = 1)
//#endregion ========================================================================================================
//#region POSITION ORDERS
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
// LOGIC ============================================================================================================
// close on valid close signal when exit with market order
if (exitOrderType == 'MARKET' and validCloseLongPosition)
    strategy.close(id = 'Long Entry', comment = 'Close Long', alert_message = 'Long(' + syminfo.ticker + '): Closed at market price')
// getting into LONG position
if (openLongPosition)
    strategy.entry(id = 'Long Entry', direction = strategy.long, alert_message = 'Long(' + syminfo.ticker + '): Started')
// submit exit order when exit with limit or stop order
if (exitOrderType != 'MARKET' and tryExitLongPosition)
    strategy.exit(id = 'Long Exit', from_entry = 'Long Entry', limit = exitOrderType == 'LIMIT' ? longLimitOrStopExitPrice : na, stop = exitOrderType == 'STOP' ? longLimitOrStopExitPrice : na, comment = 'Exit Long', alert_loss = 'Long(' + syminfo.ticker + '): Exited')
// cancel existing stop orders (if any) when open signal occurs
if (exitOrderType != 'MARKET' and openLongPosition)
    strategy.cancel(id = 'Long Exit')
// PLOT =============================================================================================================
var posColor = color.new(color.gray, 0)
plot(series = strategy.opentrades.entry_price(strategy.opentrades - 1), title = 'Position', color = posColor, linewidth = 1, style = plot.style_linebr)
//#endregion ========================================================================================================
Expand (176 lines)