Script Name: COT + ema + aux ticker
Author: Fanoooo
Description: Purpose: Create a script for backtesting the idea that COT can steer weekly Bias on Forex Market. 
How does it works: the script use Commercials Delta Conctract, EMA of the selected ticker, EMA of 2 auxiliary tickers (e.g. correlated ticker) to generates buy and sell signals, it allows to include or not each of these.
If you use all the indicator, The buy or sell...
PineScript code:

Pine Script™ strategy
COT + ema + aux ticker
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Noldo
//@version=4
strategy("COT + ema + aux ticker", overlay=true, default_qty_type = strategy.percent_of_equity, default_qty_value = 10)
src = close
bFX = false 
startDate = input(title="Start Date", type=input.integer,
     defval=1, minval=1, maxval=31)
startMonth = input(title="Start Month", type=input.integer,
     defval=1, minval=1, maxval=12)
startYear = input(title="Start Year", type=input.integer,
     defval=2010, minval=1800, maxval=2100)
afterStartDate = (time >= timestamp(syminfo.timezone,
     startYear, startMonth, startDate, 0, 0))
string ticket00 = input(defval='EUR', type=input.string, options=["AUD","GBP","CAD","EUR","JPY","CHF","NZD","USD"], title='1st', group='Tickets:', inline='T0')
string ticket01 = input(defval='EUR', type=input.string, options=["AUD","GBP","CAD","EUR","JPY","CHF","NZD","USD"],title='2nd', group='Tickets:', inline='T0')
usecot = input(title="COT ON/OFF", type=input.bool, defval=true)
useema = input(title="EMA ON/OFF", type=input.bool, defval=true)
len = input(4, minval=1, title="Length")
srcsma = input(close, title="Source")
offset = input(title="Offset COT", defval=0, minval=0, maxval=10)
out = ema(srcsma, len)
useaux1 = input(title="Aux 1 ON/OFF", type=input.bool, defval=true)
auxinv1 = input(title="Aux 1 inv.", type=input.bool, defval=false)
lenaux1 = input( 4, minval=1, title="Ema aux 1 period.")
auxsma1 = input(title="AUX Symbol", type=input.symbol, defval="DELL")
s1 = security(auxsma1, "W", close)
outaux1 = ema(s1, lenaux1)
useaux2 = input(title="Aux 2 ON/OFF", type=input.bool, defval=true)
auxinv2 = input(title="Aux 2 inv.", type=input.bool, defval=false)
lenaux2 = input( 4, minval=1, title="Ema aux 2 period.")
auxsma2 = input(title="AUX 2 Symbol", type=input.symbol, defval="DELL")
s2 = security(auxsma2, "W", close)
outaux2 = ema(s2, lenaux2)
//Can't set bFX as an input because plot and legend titles require literals
// INPUTS
sCalc  = "MARKETS"
// ***** MARKET TYPES *****
// Financial Markets (Commercial)
bTotal = (sCalc == "MARKETS")
sHead = "QUANDL:CFTC/"
sLong = "_F_L_ALL|4"
sShort = "_F_L_ALL|5"
iWidth = 2
// Non-Commercials (Speculators)
bTotal2 = (sCalc == "NON-COMS")
sHead2  = "QUANDL:CFTC/"
sLong2  = "_F_L_ALL|1"
sShort2 = "_F_L_ALL|2"
iWidth2 = 2
//***** CFTC MARKET CODES *****
// 1 - Futures
sCode1 =
         
         ticket00 == "AUD" ? "232741" :  
         ticket00 == "GBP" ? "096742" : 
         ticket00 == "CAD" ? "090741" :
         ticket00 == "EUR" ? "099741" :
         ticket00 == "JPY" ? "097741" : 
         ticket00 == "CHF" ? "092741" :
         ticket00 == "NZD" ? "112741" : 
         ticket00 == "USD" ? "098662" :
         ""
sCode2 =
         
         ticket01 == "AUD" ? "232741" :  
         ticket01 == "GBP" ? "096742" : 
         ticket01 == "CAD" ? "090741" :
         ticket01 == "EUR" ? "099741" :
         ticket01 == "JPY" ? "097741" : 
         ticket01 == "CHF" ? "092741" :
         ticket01 == "NZD" ? "112741" : 
         ticket01 == "USD" ? "098662" :
         ""
//Titles
sTitle1 =  "1st Ticker" 
// COT CFTC Auto Generation Codes 
//Data functions
dLong(asCode) =>  security(sHead + asCode + (sLong),   "W", close[0 + offset] - close[1 + offset], lookahead=barmerge.lookahead_on)
dShort(asCode) => security(sHead +asCode + (sShort),   "W", close[0 + offset] - close[1 + offset], lookahead=barmerge.lookahead_on)
// COMMERCIALS 1 ticker 
_pos_coms1_short = dShort(sCode1)
_pos_coms1_long  = dLong (sCode1)
net_com1 = _pos_coms1_long - _pos_coms1_short
// COMMERCIALS 2 ticker
sTitle2 =  "2nd Ticker"
dLong2(asCode2) =>  security(sHead + asCode2 + (sLong),   "W", close[0 + offset] - close[1 + offset], lookahead=barmerge.lookahead_on)
dShort2(asCode2) => security(sHead +asCode2 + (sShort),   "W", close[0 + offset] - close[1 + offset], lookahead=barmerge.lookahead_on)
_pos_coms2_long    =  dLong2(sCode2)
_pos_coms2_short   =  dShort2(sCode2)
net_com2 = _pos_coms2_long - _pos_coms2_short
buy =  false
sell = false
//if(not useaux1)
//    buy :=  (net_com1 > 0) and (net_com2 < 0)  and (out[0] > out[1])  and afterStartDate
//    sell :=  (net_com1 < 0) and (net_com2 > 0) and (out[0] < out[1])  and afterStartDate
// Plot data 
buy_aux1 = false
buy_aux2 = false
sell_aux1 = false
sell_aux2 = false
buy_cot = ((net_com1 > 0) and (net_com2 < 0) and usecot) or (not usecot)
sell_cot = ((net_com1 < 0) and (net_com2 > 0) and usecot) or (not usecot)
buy_ema = ((out[0] > out[1]) and useema) or (not useema)
sell_ema = ((out[0] < out[1]) and useema) or (not useema)
if(auxinv1)
    buy_aux1 := ((outaux1[0]<outaux1[1]) and useaux1) or (not useaux1)
    sell_aux1 := ((outaux1[0]>outaux1[1]) and useaux1) or not useaux1
if not auxinv1
    buy_aux1:= ((outaux1[0]>outaux1[1]) and useaux1) or not useaux1
    sell_aux1 := ((outaux1[0]<outaux1[1]) and useaux1) or not useaux1
if auxinv2
    buy_aux2 := ((outaux2[0]<outaux2[1]) and useaux2) or not useaux2
    sell_aux2 := ((outaux2[0]>outaux2[1]) and useaux2) or not useaux2
if not auxinv2
    buy_aux2:= ((outaux2[0]>outaux2[1]) and useaux2) or not useaux2
    sell_aux2 := ((outaux2[0]<outaux2[1]) and useaux2) or not useaux2
buy :=  buy_cot  and buy_ema and buy_aux1 and buy_aux2 and afterStartDate
sell :=  sell_cot and sell_ema and sell_aux1 and sell_aux2 and afterStartDate
if (sell)
    strategy.entry("Short", strategy.short,  qty = 100000)
    strategy.exit("SL-TP Short","Short",stop = high[0])
    
if (buy)
    strategy.entry("Long", strategy.long,  qty = 100000)
    strategy.exit("SL-TP Long","Long",stop = low[0])
//if close[0] < close[1] or close[0] > close[1]
//    strategy.close("Short")
//    strategy.close("Long")
    
if strategy.openprofit > 0 
    strategy.close("Short")
    strategy.close("Long")
plotshape(buy, style=shape.triangleup,   location=location.belowbar, offset=0, color=color.green, size = size.small)
plotshape(sell, style=shape.triangledown,   location=location.abovebar, offset=0, color=color.red, size = size.small)
Expand (196 lines)