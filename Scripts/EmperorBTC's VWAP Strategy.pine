Script Name: EmperorBTC's VWAP Strategy
Author: vaidab
Description: EmperorBTC's VWAP Indicator & Strategy
             v2.1

     coded by Bogdan Vaida

This indicator was created after EmperorBTC's conditions. 
Good timeframes for it: 30', 15', 5' 
To convert from strategy to study switch the commented lines in the beginning
and at the end of the script and vice versa.

What this indicator does is to check if:
o Pivot Point was...
PineScript code:

Pine Scriptâ„¢ strategy
EmperorBTC's VWAP Strategy
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
//Â EmperorBTC'sÂ VWAPÂ IndicatorÂ &Â Strategy
//Â Â Â Â Â Â Â Â Â Â Â Â Â Â v2.1
//Â 
//Â Â Â Â Â Â codedÂ byÂ BogdanÂ Vaida
//Â ThisÂ indicatorÂ wasÂ createdÂ afterÂ EmperorBTC'sÂ conditionsÂ onÂ Twitter.Â 
//Â GoodÂ timeframesÂ forÂ it:Â 30',Â 15',Â 5'
//Â ToÂ convertÂ fromÂ strategyÂ toÂ studyÂ switchÂ theÂ commentedÂ linesÂ inÂ theÂ beginning
//Â andÂ atÂ theÂ endÂ ofÂ theÂ scriptÂ andÂ viceÂ versa.
//Â WhatÂ thisÂ indicatorÂ doesÂ isÂ toÂ checkÂ if:
//Â oÂ PivotÂ PointÂ wasÂ crossed
//Â oÂ Stoch-RSIÂ andÂ VWAPÂ wereÂ crossedÂ inÂ currentÂ orÂ previousÂ candle
//Â oÂ CandleÂ (orÂ previousÂ candle)Â closeÂ isÂ inÂ theÂ trendÂ direction
//Â IfÂ allÂ theseÂ areÂ trueÂ thenÂ itÂ willÂ goÂ longÂ orÂ shortÂ basedÂ onÂ direction.
//Â FUTUREÂ IDEAS:Â 
//Â Â -Â VolumeÂ Expansion
//Â Â -Â CandleÂ StickÂ patterns
//@version=4
//Â ğŸ”¥UncommentÂ theÂ lineÂ belowÂ forÂ theÂ indicatorÂ andÂ commentÂ theÂ strategyÂ lines
//Â study(title="EmperorBTC'sÂ VWAPÂ Indicator",Â shorttitle="EMP-VWAP",Â overlay=true)
//Â ğŸ”¥Â UncommentÂ theÂ lineÂ belowÂ forÂ theÂ strategyÂ andÂ commentÂ theÂ aboveÂ line
strategy(title="EmperorBTC'sÂ VWAPÂ Strategy",Â shorttitle="EMP-VWAP",Â overlay=true,Â pyramiding=1)
plotAveragePriceCrossedPivotPointÂ =Â input(false,Â title="PlotÂ CloseÂ PriceÂ CrossingÂ PivotÂ Points?",Â group="PivotÂ Points")
plotPivotPointsÂ =Â input(false,Â title="PlotÂ PivotÂ Points?",Â group="PivotÂ Points")
pivotPointsTypeÂ =Â input(title="PivotÂ PointsÂ type",Â defval="Fibonacci",Â options=["Fibonacci",Â "Traditional"],Â group="PivotÂ Points")
pivotPointCircleWidthÂ =Â input(2,Â title="WidthÂ ofÂ PivotÂ PointÂ circles",Â minval=1,Â group="PivotÂ Points")
plotVWAPÂ =Â input(true,Â title="PlotÂ VWAP?",Â group="VWAP")
plotAvgPriceÂ =Â input(true,Â title="PlotÂ AverageÂ Price?",Â group="VWAP")
plotVWAPCrossPriceÂ =Â input(false,Â title="PlotÂ PriceÂ CrossingÂ VWAP?",Â group="VWAP")
resoÂ =Â input(title="Period",Â type=input.resolution,Â defval="D",Â group="VWAP")
cumulativePeriodÂ =Â input(14,Â "VWAPÂ CumulativeÂ Period",Â group="VWAP")
plotStochRSICrossÂ =Â input(false,Â title="PlotÂ StochRSIÂ Cross?",Â group="StochRSI")
smoothKÂ =Â input(3,Â "K",Â minval=1,Â group="StochRSI",Â inline="K&D")
smoothDÂ =Â input(3,Â "D",Â minval=1,Â group="StochRSI",Â inline="K&D")
lengthRSIÂ =Â input(14,Â "RSIÂ Length",Â minval=1,Â group="Stochastic-RSI",Â inline="length")
lengthStochÂ =Â input(14,Â "StochasticÂ Length",Â minval=1,Â group="Stochastic-RSI",Â inline="length")
rsiSrcÂ =Â input(close,Â title="RSIÂ Source",Â group="Stochastic-RSI")
plotLongÂ =Â input(true,Â title="PlotÂ LongÂ Opportunity?",Â group="StrategyÂ only")
plotShortÂ =Â input(true,Â title="PlotÂ ShortÂ Opportunity?",Â group="StrategyÂ only")
tradingDirectionÂ =Â input(title="StrategyÂ tradingÂ Direction:Â ",Â defval="L&S",Â options=["L&S",Â "L",Â "S"],Â group="StrategyÂ only")
takeProfitÂ =Â input(1.0,Â title='TakeÂ ProfitÂ %',Â group="StrategyÂ only")Â /Â 100
plotTPÂ =Â input(true,Â title="PlotÂ TakeÂ Profit?",Â group="StrategyÂ only")
startDateÂ =Â input(title="StartÂ Date",Â type=input.integer,
Â Â Â Â Â defval=1,Â minval=1,Â maxval=31,Â group="BacktestingÂ range",Â inline="StartÂ Date")
startMonthÂ =Â input(title="StartÂ Month",Â type=input.integer,
Â Â Â Â Â defval=1,Â minval=1,Â maxval=12,Â group="BacktestingÂ range",Â inline="StartÂ Date")
startYearÂ =Â input(title="StartÂ Year",Â type=input.integer,
Â Â Â Â Â defval=2017,Â minval=1800,Â maxval=2100,Â group="BacktestingÂ range",Â inline="StartÂ Date")
endDateÂ =Â input(title="EndÂ Date",Â type=input.integer,
Â Â Â Â Â defval=31,Â minval=1,Â maxval=31,Â group="BacktestingÂ range",Â inline="EndÂ Date")
endMonthÂ =Â input(title="EndÂ Month",Â type=input.integer,
Â Â Â Â Â defval=12,Â minval=1,Â maxval=12,Â group="BacktestingÂ range",Â inline="EndÂ Date")
endYearÂ =Â input(title="EndÂ Year",Â type=input.integer,
Â Â Â Â Â defval=2050,Â minval=1800,Â maxval=2100,Â group="BacktestingÂ range",Â inline="EndÂ Date")
//Â PivotPointÂ codeÂ (PVTvXÂ byÂ DGTÂ hasÂ someÂ niceÂ codeÂ onÂ PP)
candleHighÂ Â =Â security(syminfo.tickerid,"D",Â high[1],Â lookahead=barmerge.lookahead_on)
candleLowÂ Â Â =Â security(syminfo.tickerid,"D",Â low[1],Â lookahead=barmerge.lookahead_on)
candleCloseÂ =Â security(syminfo.tickerid,"D",Â close[1],Â lookahead=barmerge.lookahead_on)
pivotPointÂ =Â (candleHigh+candleLow+candleClose)Â /Â 3
floatÂ resistance1Â =Â na
floatÂ resistance2Â =Â na
floatÂ resistance3Â =Â na
floatÂ support1Â =Â na
floatÂ support2Â =Â na
floatÂ support3Â =Â na
ifÂ pivotPointsTypeÂ ==Â "Fibonacci"
Â Â Â Â resistance1Â :=Â pivotPointÂ +Â 0.382Â *Â (candleHighÂ -Â candleLow)
Â Â Â Â resistance2Â :=Â pivotPointÂ +Â 0.618Â *Â (candleHighÂ -Â candleLow)
Â Â Â Â resistance3Â :=Â pivotPointÂ +Â (candleHighÂ -Â candleLow)
Â Â Â Â support1Â :=Â pivotPointÂ -Â 0.382Â *Â (candleHighÂ -Â candleLow)
Â Â Â Â support2Â :=Â pivotPointÂ -Â 0.618Â *Â (candleHighÂ -Â candleLow)
Â Â Â Â support3Â :=Â pivotPointÂ -Â (candleHighÂ -Â candleLow)
elseÂ ifÂ pivotPointsTypeÂ ==Â "Traditional"
Â Â Â Â resistance1Â :=Â 2Â *Â pivotPointÂ -Â candleLow
Â Â Â Â resistance2Â :=Â pivotPointÂ +Â (candleHighÂ -Â candleLow)
Â Â Â Â resistance3Â :=Â candleHighÂ +Â 2Â *Â (pivotPointÂ -Â candleLow)Â 
Â Â Â Â support1Â :=Â 2Â *Â pivotPointÂ -Â candleHigh
Â Â Â Â support2Â :=Â pivotPointÂ -Â (candleHighÂ -Â candleLow)
Â Â Â Â support3Â :=Â candleLowÂ -Â 2Â *Â (candleHighÂ -Â pivotPoint)
plot(seriesÂ =Â plotPivotPointsÂ ?Â support1Â :Â na,Â color=#ff0000,Â title="S1",Â styleÂ =Â plot.style_circles,Â linewidthÂ =Â pivotPointCircleWidth)
plot(seriesÂ =Â plotPivotPointsÂ ?Â support2Â :Â na,Â color=#800000,Â title="S2",Â styleÂ =Â plot.style_circles,Â linewidthÂ =Â pivotPointCircleWidth)
plot(seriesÂ =Â plotPivotPointsÂ ?Â support3Â :Â na,Â color=#330000,Â title="S3",Â styleÂ =Â plot.style_circles,Â linewidthÂ =Â pivotPointCircleWidth)
plot(seriesÂ =Â plotPivotPointsÂ ?Â pivotPointÂ :Â na,Â color=#FFA500,Â title="PP",Â styleÂ =Â plot.style_circles,Â linewidthÂ =Â pivotPointCircleWidth)
plot(seriesÂ =Â plotPivotPointsÂ ?Â resistance1Â :Â na,Â color=#00FF00,Â title="R1",Â styleÂ =Â plot.style_circles,Â linewidthÂ =Â pivotPointCircleWidth)
plot(seriesÂ =Â plotPivotPointsÂ ?Â resistance2Â :Â na,Â color=#008000,Â title="R2",Â styleÂ =Â plot.style_circles,Â linewidthÂ =Â pivotPointCircleWidth)
plot(seriesÂ =Â plotPivotPointsÂ ?Â resistance3Â :Â na,Â color=#003300,Â title="R3",Â styleÂ =Â plot.style_circles,Â linewidthÂ =Â pivotPointCircleWidth)
pivotPointCrossedUpÂ =Â ((lowÂ <Â support3)Â andÂ (closeÂ >Â support3))Â orÂ ((lowÂ <Â support2)Â andÂ (closeÂ >Â support2))Â orÂ ((lowÂ <Â support1)Â andÂ (closeÂ >Â support1))Â orÂ Â ((lowÂ <Â pivotPoint)Â andÂ (closeÂ >Â pivotPoint))
pivotPointCrossedDownÂ =Â ((highÂ >Â support3)Â andÂ (closeÂ <Â support3))Â orÂ ((highÂ >Â support2)Â andÂ (closeÂ <Â support2))Â orÂ ((highÂ >Â support1)Â andÂ (closeÂ <Â support1))Â orÂ Â ((highÂ >Â pivotPoint)Â andÂ (closeÂ <Â pivotPoint))
plotPPColorÂ =Â pivotPointCrossedUpÂ ?Â color.greenÂ :
Â Â Â Â Â pivotPointCrossedDownÂ ?Â color.redÂ :
Â Â Â Â Â na
plotshape(seriesÂ =Â plotAveragePriceCrossedPivotPointÂ ?Â (pivotPointCrossedUpÂ orÂ pivotPointCrossedDown)Â :Â na,Â title="PPÂ Cross",Â styleÂ =Â shape.triangleup,Â location=location.belowbar,Â color=plotPPColor,Â text="PP",Â size=size.small)
//Â VWAPÂ (takenÂ fromÂ theÂ TVÂ code)
//Â ThereÂ areÂ fiveÂ stepsÂ inÂ calculatingÂ VWAP:
//
//Â 1.Â CalculateÂ theÂ TypicalÂ PriceÂ forÂ theÂ period.Â [(HighÂ +Â LowÂ +Â Close)/3)]
//Â 2.Â MultiplyÂ theÂ TypicalÂ PriceÂ byÂ theÂ periodÂ VolumeÂ (TypicalÂ PriceÂ xÂ Volume)
//Â 3.Â CreateÂ aÂ CumulativeÂ TotalÂ ofÂ TypicalÂ Price.Â Cumulative(TypicalÂ PriceÂ xÂ Volume)
//Â 4.Â CreateÂ aÂ CumulativeÂ TotalÂ ofÂ Volume.Â Cumulative(Volume)
//Â 5.Â DivideÂ theÂ CumulativeÂ Totals.Â 
//
//Â VWAPÂ =Â Cumulative(TypicalÂ PriceÂ xÂ Volume)Â /Â Cumulative(Volume)
//Â Emperor'sÂ Edition
tÂ =Â time(reso)
debutÂ =Â na(t[1])Â orÂ tÂ >Â t[1]
addsourceÂ =Â ohlc4Â *Â volume
addvolÂ =Â volume
addsourceÂ :=Â debutÂ ?Â addsourceÂ :Â addsourceÂ +Â addsource[1]
addvolÂ :=Â debutÂ ?Â addvolÂ :Â addvolÂ +Â addvol[1]
vwapValueÂ =Â addsourceÂ /Â addvol
pVWAPÂ =Â plot(seriesÂ =Â plotVWAPÂ ?Â vwapValueÂ :Â na,Â color=color.purple,Â title="VWAP")
pAvgPriceÂ =Â plot(seriesÂ =Â plotAvgPriceÂ ?Â ohlc4Â :Â na,Â color=color.blue,Â title="PRICE")
fill(pVWAP,Â pAvgPrice,Â colorÂ =Â ohlc4Â >Â vwapValueÂ ?Â color.redÂ :Â color.green,Â title="VWAPÂ PRICEÂ FILL")
vwapCrossUpÂ =Â (lowÂ <Â vwapValue)Â andÂ (vwapValueÂ <Â high)Â andÂ (closeÂ >Â open)Â //Â addedÂ greenÂ candleÂ check
vwapCrossDownÂ =Â (highÂ >Â vwapValue)Â andÂ (vwapValueÂ >Â low)Â andÂ (closeÂ <Â open)Â //Â addedÂ redÂ candleÂ check
plotVWAPColorÂ =Â vwapCrossUpÂ ?Â color.greenÂ :
Â Â Â Â Â vwapCrossDownÂ ?Â color.redÂ :
Â Â Â Â Â na
plotshape(seriesÂ =Â plotVWAPCrossPriceÂ ?Â (vwapCrossUpÂ orÂ vwapCrossDown)Â :Â na,Â title="VWAPÂ CrossÂ Price",Â style=shape.triangleup,Â location=location.belowbar,Â color=plotVWAPColor,Â text="VWAP",Â size=size.small)
//Â StochasticÂ RSI
rsi1Â =Â rsi(rsiSrc,Â lengthRSI)
kÂ =Â sma(stoch(rsi1,Â rsi1,Â rsi1,Â lengthStoch),Â smoothK)
dÂ =Â sma(k,Â smoothD)
sRsiCrossUpÂ =Â k[1]Â <Â d[1]Â andÂ kÂ >Â d
sRsiCrossDownÂ =Â k[1]Â >Â d[1]Â andÂ kÂ <Â d
plotColorÂ =Â sRsiCrossUpÂ ?Â color.greenÂ :
Â Â Â Â Â sRsiCrossDownÂ ?Â color.redÂ :
Â Â Â Â Â na
plotshape(seriesÂ =Â plotStochRSICrossÂ ?Â (sRsiCrossUpÂ orÂ sRsiCrossDown)Â :Â na,Â title="StochRSIÂ CrossÂ Up",Â style=shape.triangleup,Â location=location.belowbar,Â color=plotColor,Â text="StochRSI",Â size=size.small)
//Â LongÂ Trades
sRsiCrossedUpÂ =Â sRsiCrossUpÂ orÂ sRsiCrossUp[1]
vwapCrossedUpÂ =Â vwapCrossUpÂ orÂ vwapCrossUp[1]
//Â longCond1Â =Â (sRsiCrossÂ andÂ vwapCross)Â orÂ (sRsiCross[1]Â andÂ vwapCross)Â orÂ (sRsiCrossÂ andÂ vwapCross[1])
longCond1Â =Â (sRsiCrossedUp[1]Â andÂ vwapCrossedUp[1])
longCond2Â =Â pivotPointCrossedUp[1]
longCond3Â =Â (close[1]Â >Â open[1])Â andÂ (closeÂ >Â open)Â //Â checkÂ this
longCondÂ =Â longCond1Â andÂ longCond2Â andÂ longCond3
plotshape(seriesÂ =Â plotLongÂ ?Â longCondÂ :Â na,Â title="Long",Â style=shape.triangleup,Â location=location.belowbar,Â color=color.green,Â text="Long",Â size=size.normal)
//Â ShortÂ Trades
sRsiCrossedDownÂ =Â sRsiCrossDownÂ orÂ sRsiCrossDown[1]
vwapCrossedDownÂ =Â vwapCrossDownÂ orÂ vwapCrossDown[1]
shortCond1Â =Â (sRsiCrossedDown[1]Â andÂ vwapCrossedDown[1])
shortCond2Â =Â pivotPointCrossedDown[1]
shortCond3Â =Â (close[1]Â <Â open[1])Â andÂ (closeÂ <Â open)
shortCondÂ =Â shortCond1Â andÂ shortCond2Â andÂ shortCond3
plotshape(seriesÂ =Â plotShortÂ ?Â shortCondÂ :Â na,Â title="Short",Â style=shape.triangledown,Â location=location.abovebar,Â color=color.red,Â text="Short",Â size=size.normal)
//Â alertcondition(condition=longCond,Â title="Long",Â message="GoingÂ long")
//Â alertcondition(condition=shortCond,Â title="Short",Â message="GoingÂ short")
//Â ğŸ”¥Â UncommentÂ theÂ linesÂ belowÂ forÂ theÂ strategyÂ andÂ revertÂ forÂ theÂ study
takeProfitLongÂ Â Â Â Â =Â strategy.position_avg_priceÂ *Â (1Â +Â takeProfit)
takeProfitShortÂ Â Â Â Â =Â strategy.position_avg_priceÂ *Â (1Â -Â takeProfit)
exitTpÂ =Â ((strategy.position_sizeÂ >Â 0)Â andÂ (closeÂ >Â takeProfitLong))Â orÂ ((strategy.position_sizeÂ <Â 0)Â andÂ (closeÂ <Â takeProfitShort))
strategy.risk.allow_entry_in(tradingDirectionÂ ==Â "L"Â ?Â strategy.direction.longÂ :Â tradingDirectionÂ ==Â "S"Â ?Â strategy.direction.shortÂ :Â strategy.direction.all)
plot(seriesÂ =Â (plotTPÂ andÂ strategy.position_sizeÂ >Â 0)Â ?Â takeProfitLongÂ :Â na,Â title="TPÂ Level",color=color.green,Â style=plot.style_linebr,Â linewidth=2)
plot(seriesÂ =Â (plotTPÂ andÂ strategy.position_sizeÂ <Â 0)Â ?Â takeProfitShortÂ :Â na,Â title="TPÂ Level",color=color.red,Â style=plot.style_linebr,Â linewidth=2)
inDateRangeÂ =Â (timeÂ >=Â timestamp(syminfo.timezone,Â startYear,
Â Â Â Â Â Â Â Â Â startMonth,Â startDate,Â 0,Â 0))Â andÂ (timeÂ <Â timestamp(syminfo.timezone,Â endYear,Â endMonth,Â endDate,Â 0,Â 0))
strategy.entry("VWAP",Â strategy.long,Â comment="Long",Â when=longCondÂ andÂ inDateRange)
strategy.entry("VWAP",Â strategy.short,Â comment="Short",Â when=shortCondÂ andÂ inDateRange)
strategy.close(id="VWAP",Â when=exitTp)
ifÂ (notÂ inDateRange)
Â Â Â Â strategy.close_all()
Expand (196 lines)