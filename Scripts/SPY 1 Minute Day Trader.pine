Script Name: SPY 1 Minute Day Trader
Author: fbearman2000
Description: When scalping options, users are looking for where breakouts are going to occur instead of sitting thru areas choppy price action that drain delta and cause them to lose value even if price is up trending. This script tries to identify when a trend reversal is expected based on one minute price action on the SPY. It alerts users to prepare for potential breakout...
PineScript code:

Pine Script™ strategy
SPY 1 Minute Day Trader
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
//@version=5
strategy(title="SPY 1 Minute Day Trader", initial_capital=1800000, default_qty_type=strategy.percent_of_equity, default_qty_value=7, pyramiding=0, commission_type=strategy.commission.cash_per_order, commission_value=2.6, overlay=true, calc_on_every_tick=false, process_orders_on_close=true, max_labels_count=500)
//This script has been created to take into account how the following variables impact trend for SPY 1 Minute
//The SPY stop losses/take profit have been set to 0.00075% which equates to 10%ish on SPY 1 DTE ATM contracts
//5 ema vs 13 ema : A cross establishes start of trend
//Stoicastic smoothed line: Establish over bought vs over sold
//MACD (Line, Signal & Slope) : If you have momentum
//ADX : if you are trending
//RSI : If the trend has strength
//MACD Difference between line and signal line to wait on buying
//Root Mean Square of ATR to(Average True Range) Want to buy during lower values
//When the bounce up or bounce down is detected it shows yellow tick marks above and below the orange triangle
//marker so users have an idea where potential run ends or to better understand when the analytic is wrong.
//White L's indicate that 7 of 8 conditions are met due to impending uptrend w/ missing one in green below it
//Yellow L's indicate that 8 of 8 conditions still are met
//White S's indicate that 7 of 8 conditions are met due to impending downtrend w/ missing condition in red above it
//Yellow S's indicate that 8 of 8 conditions still are met
//Logic is available for trades to repeat before re-opening but has been disabled, since noisy trades have been removed.
//Won't close position until either it gets stopped based on 0.00075 * stock price or higher degree trend
//changes (as long as trending) or loses trend as determined by ADX.
//Won't open any trades on last two minutes of day and won't trade during first 5 minutes of day
//Will close any open trades going into 10AM and 4PM
//For 4 option contracts set account to $1,800,000 with 7% trade and option cost of $2.60 for each trade
//Forgot to remove lines and indicators
// Initialize variables
var float long_entry_price = na
var float short_entry_price = na
var float stop_loss = na
var float take_profit = na
var float twoxtake_profit = na
var float threextake_profit = na
var float short_stop_loss = na
var float short_take_profit = na
var float twoxshort_take_profit = na
var float threexshort_take_profit = na
//var float option_SL_P = 0.00075//approx 10% on SPY 1 DTE
//var float option_TP_P = 0.00075//approx 10% on SPY 1 DTE
var long_entry_time = 0
var long_entry_minute = 0
var short_entry_time = 0
var short_entry_minute = 0
var allow_long_entry = true
var allow_short_entry = true
var allow_trades = true
var hourlyclose = 0
var notify = 0
var shortnotify = 0
var adxinput = 18
var entry = 0
var tooltipnote = "Emtpy"
var signal = "Empty"
var show = 0
float upperBandValue = na
float lowerBandValue = na
// Trade pin bars reversals
shortpinbars = input.bool(true, "Trade 3x tail to body short pin bar reversals")
longpinbars = input.bool(true, "Trade 3x tail to body long pin bar reversals")
// Show 1 missing parameter by default
D1 = input.bool(false, "Show missing parameters for all time / Unchecked (default) will allow descriptive tooltip for last 500 entries")
// Disable trading during tough times by default
notrade = input.bool(true, "Trade from 10:30 until Noon EST")
notradelunch = input.bool(true, "Trade during lunchtime from noon until 1 EST")
notrade1to3 = input.bool(true, "Trade from 1 until 3 EST") 
notradePH = input.bool(true, "Trade during Power Hour 3 until 4 EST")
// Calculate VWAP and upper and lower bands
vwapmid = request.security(syminfo.tickerid, "1", ta.vwap(hlc3))
vwap_array = array.new_float()
array.push(vwap_array, vwapmid)
array.push(vwap_array, vwapmid + 1)
array.push(vwap_array, vwapmid - 1)
std_dev = array.stdev(vwap_array)
upperBandValue := vwapmid + std_dev * 2
lowerBandValue := vwapmid - std_dev * 2
plot(vwapmid, title="VWAP", color=color.aqua, linewidth = 2)
plot(upperBandValue, title="Upper VWAP", color=color.aqua, linewidth = 1)
plot(lowerBandValue, title="Lower VWAP", color=color.aqua, linewidth = 1)
// Calculate the EMAs & SMAs
ema5 = ta.ema(close, 5)
ema13 = ta.ema(close, 13)
sma20 = ta.sma(close, 20)
// Input Stop Losses and Take Profits
option_SL_P = input.float(0.00075, title = "Stop Loss Percentage in Decimal Form") //approx 10% on SPY 1 DTE
option_TP_P = input.float(0.00075, title = "Take Profit Percentage in Decimal Form") //approx 10% on SPY 1 DTE
//From Date
TSTAMP = input.time(title="From this date. To see entire backtest range set to a year ago.", defval=timestamp("2022-05-12T09:30:00"))
// Input parameters
fastLength = input.int(12, minval=1, title="MACD Fast Length")
slowLength = input.int(26, minval=1, title="MACD Slow Length")
signalLength = input.int(9, minval=1, title="MACD Signal Smoothing")
// Inputs
length = input.int(14, "Stochastic Length")
smoothK = input.int(3, "Stoicastic Smooth K")
src = input(close, "Stoicastic Source")
//Stochastic Calculation
highestHigh = ta.highest(src, length)
lowestLow = ta.lowest(src, length)
k = 100 * ((src - lowestLow) / (highestHigh - lowestLow))
d = ta.sma(k, smoothK)
// Calculate the RSI
rsiValue = ta.rsi(close, 5)
// Calculate the signal line as the SMA of the RSI for 5 minute over 9 periods
rsiSignal = ta.sma(rsiValue, 9)
// Calculate MACD
[macdLine, signalLine, _] = ta.macd(close, fastLength, slowLength, signalLength)
// Calculate slope of MACD line
macdSlope = (macdLine - macdLine[3]) / (bar_index - bar_index[3])
// Length of the ATR
atr_length = input.int(14, title="ATR Length", minval=1)
// Calculate the True Range
tr = ta.tr(true)
// Calculate the ATR
atr = ta.atr(atr_length)
// Square the ATR values
atr_squared = math.pow(atr, 2)
// Calculate the mean of the squared ATR values over a window of 20 bars
mean_atr_squared = ta.sma(atr_squared, 20)
// Take the square root of the mean to get the RMS
rms_atr = math.sqrt(mean_atr_squared)
// Length of the ADX
len = input.int(14, title="ADX Length", minval=1)
// Set minimum number of bars between trades
min_bars_between_trades = 12
// Calculate the Directional Movement
up = ta.change(high)
down = -ta.change(low)
plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
// Calculate the Smoothed Directional Movement
plusDI = 100 * ta.ema(plusDM, len) / ta.ema(tr, len)
minusDI = 100 * ta.ema(minusDM, len) / ta.ema(tr, len)
// Calculate the Directional Index (DX)
DX = 100 * math.abs(plusDI - minusDI) / (plusDI + minusDI)
// Calculate the ADX
adx = ta.ema(DX, len)
// Calculate 5-minute close price on a 1-minute chart
src_5m = request.security(syminfo.tickerid, "5", close)//, lookahead=barmerge.lookahead_on)
ema_5m_20 = ta.ema(src_5m, 20)
ema_5m = ta.ema(src_5m, 13)
ema_5m_5 = ta.ema(src_5m, 5)
plot(ema_5m, "5 Min 13 EMA", color=color.orange, linewidth = 2)
plot(ema_5m_5, "5 Min 5 EMA", color=color.blue, linewidth = 2)
// Get high, low, and close prices
highPrice = high
lowPrice = low
closePrice = close
// Get the Unix timestamp of the current bar
unixTimestamp = time_close
// Extract the minute value from the Unix timestamp
minuteValue = minute(unixTimestamp)
// Calculate the trading minute of the day
tradingMinute = (minuteValue + (hour(unixTimestamp) - 9) * 60) - 30
// Get the lowest low of the day
lowOfDay = ta.lowest(low, tradingMinute)
highOfDay = ta.highest(high, tradingMinute)
// Check if the current bar is after 10:30 AM
isAfter1030 = request.security(syminfo.tickerid, "60", tradingMinute >= 0)
// Get the highest high and lowest low of the last hour
highOfLastHour = ta.highest(high, 90)
lowOfLastHour = ta.lowest(low, 90)
// Plot the minute value and the low of the day on the chart 
plot(lowOfDay, "Low of Day", color.fuchsia)
plot(highOfDay, "High of Day", color.fuchsia) 
 
// Determine buy and sell signals
buy_signal = (ema5 > ema13 and ema_5m > ema_5m_5 and rsiSignal < 49 and tradingMinute <= 60 and barstate.isconfirmed) or
             (notrade == 1 and ema5 > ema13 and ema_5m > ema_5m_5 and rsiSignal < 49 and tradingMinute > 60 and tradingMinute <= 150 and barstate.isconfirmed) or
             (notradelunch == 1 and ema5 > ema13 and ema_5m > ema_5m_5 and rsiSignal < 49 and tradingMinute > 150 and tradingMinute <= 210 and barstate.isconfirmed) or
             (notrade1to3 and ema5 > ema13 and ema_5m > ema_5m_5 and rsiSignal < 49 and tradingMinute > 210 and tradingMinute <= 330 and barstate.isconfirmed) or
             (notradePH == 1 and ema5 > ema13 and ema_5m > ema_5m_5 and rsiSignal < 49 and tradingMinute > 330 and barstate.isconfirmed)
short_buy_signal = (ema5 < ema13 and ema_5m < ema_5m_5 and rsiSignal > 0 and tradingMinute <= 60 and barstate.isconfirmed) or
                   (notrade == 1 and ema5 < ema13 and ema_5m < ema_5m_5 and rsiSignal > 60 and tradingMinute > 60 and tradingMinute <= 150 and barstate.isconfirmed) or
                   (notradelunch == 1 and ema5 < ema13 and ema_5m < ema_5m_5 and rsiSignal > 60 and tradingMinute > 150 and tradingMinute <= 210 and barstate.isconfirmed) or
                   (notrade1to3 and ema5 < ema13 and ema_5m < ema_5m_5 and rsiSignal > 60 and tradingMinute > 210 and tradingMinute <= 330 and barstate.isconfirmed) or
                   (notradePH == 1 and ema5 < ema13 and ema_5m < ema_5m_5 and rsiSignal > 65 and tradingMinute > 330 and barstate.isconfirmed)
//short_buy_signal = false
// Define long entry conditions
C1 = ema5 > ema13 ? 1 : 0 //E below bar when only one missing
C2 = d >= 0 ? 1 : 0 //d Smoothed Stoicastic below bar when when only one missing
//C3 = macdLine < .5 ? 1 : 0 //M below bar when only one missing
C4 = adx > 0 ? 1 : 0 //A below bar when only one missing
C5 = macdSlope > 0 ? 1 : 0 //% below bar when only one missing
//C6 = signalLine > -.2 ? 1 : 0 //S (MACD Signal) below bar when only one missing
//C7 = rsiSignal > 30 ? 1 : 0 //R below bar when only one missing
//C17 = math.abs(macdLine - signalLine) > 0.00 ? 1 : 0 //D MACD Difference below bar when only one missing
C18 = rms_atr < 0.75 ? 1 : 0 //T Root Mean Square of ATR below bar when only one missing
C19 = ((ema_5m-ema_5m_5)/close >0.0005 and tradingMinute <= 60) or ((ema_5m-ema_5m_5)/close >0.0005 and tradingMinute > 60 and tradingMinute <= 150) or (math.abs(ema_5m-ema_5m_5)/close >0.0002 and tradingMinute > 150 and tradingMinute <= 210) or ((ema_5m-ema_5m_5)/close >0.0001 and tradingMinute > 210 and tradingMinute <= 330) or (math.abs(ema_5m-ema_5m_5)/close >0.0002 and tradingMinute > 330) ? 1 : 0 //5 minute 5 EMA / 13 EMA difference below bar when only one missing
C22 = close > open ? 1 : 0 //C difference below bar when only one missing
C23 = (math.abs(close - highOfDay)/close > 0.0006 and tradingMinute <= 150) or (math.abs(close - highOfDay)/close > 0.0006 and tradingMinute > 150 and tradingMinute <= 210) or (math.abs(close - highOfDay)/close > 0.0002 and tradingMinute > 210 and tradingMinute <= 330) or (math.abs(close - highOfDay)/close > 0.0006 and tradingMinute > 330) ? 1 : 0 //H Too close to High of Day
C25 = close >= lowerBandValue ? 1 : 0 //V close above lower band of VWAP below bar when only one missing
// Define short entry conditions
C8 = ema5 < ema13 ? 1 : 0 //E above bar when only one missing
C9 = d >= 0 ? 1 : 0 //d Smoothed Stoicastic above bar when when only one missing
//C10 = macdLine > -0.5 ? 1 : 0 //M above bar when only one missing
C11 = adx > 20 ? 1 : 0 //A above bar when only one missing
C12 = macdSlope < 0 ? 1 : 0 //% above bar when only one missing
//C13 = signalLine < .2 ? 1 : 0 //S (MACD Signal) above bar when only one missing
//C14 = rsiSignal < 70 ? 1 : 0 //R above bar when only one missing
//C15 = math.abs(macdLine - signalLine) > 0.00 ? 1 : 0 //D MACD Difference above bar when only one mising
C16 = rms_atr < 0.75 ? 1 : 0 //T Root Mean Square of ATR above bar when only one missing
C20 = ((ema_5m-ema_5m_5)/close >0.0005 and tradingMinute <= 60) or (math.abs(ema_5m-ema_5m_5)/close >0.0002 and tradingMinute > 60 and tradingMinute <= 150) or (math.abs(ema_5m-ema_5m_5)/close >0.0003 and tradingMinute > 150 and tradingMinute <= 210) or ((ema_5m-ema_5m_5)/close >0.0003 and tradingMinute > 210 and tradingMinute <= 330) or ((ema_5m-ema_5m_5)/close >0.0003 and tradingMinute > 330) ? 1 : 0 //5 minute 5 EMA / 13 EMA difference above bar when only one missing
C21 = open > close ? 1 : 0 //C difference above bar when only one missing
C24 = (math.abs(close - lowOfDay)/close > 0.0006 and tradingMinute <= 150) or (math.abs(close - lowOfDay)/close > 0.0006 and tradingMinute > 150 and tradingMinute <= 210) or (math.abs(close - lowOfDay)/close > 0.0002 and tradingMinute > 210 and tradingMinute <= 330) or (math.abs(close - lowOfDay)/close > 0.0006 and tradingMinute > 330) ? 1 : 0 //L Too close to Low of Day
C26 = close <= upperBandValue  ? 1 : 0 //V close above upper band of VWAP above bar when only one missing
// labels for tooltips
if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C1) == 0 and barstate.isconfirmed
    tooltipnote := "1 min 13 EMA > 5 EMA (decreasing trend)"
    signal := "↓"
    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C2) == 0 and barstate.isconfirmed
    tooltipnote := "Stoichastic > 90 (overbought may dump)"
    signal := "d"
    show := 1
//else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C3) == 0 and barstate.isconfirmed
//    tooltipnote := "MACD > 0.5 (too much momentum already)"
//    signal := "M\nA\nC\nD"
//    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C4) == 0 and barstate.isconfirmed
    tooltipnote := "ADX < 20 (not trending)"
    signal := "A\nD\nX"
    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C5) == 0 and barstate.isconfirmed
    tooltipnote := "MACD has downward slope (losing momentum)"
    signal := "M\n/"
    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C18) == 0 and barstate.isconfirmed
    tooltipnote := "ATR > 0.75 (increased volatility)"
    signal := "A\nT\nR"
    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C19) == 0 and barstate.isconfirmed
    tooltipnote := "5 Min 5/13 EMA difference too close (noisy trade)"
    signal := "5"
    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C22) == 0 and barstate.isconfirmed
    tooltipnote := "Candle closes below open (trend reversing?)"
    signal := "C"
    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C23) == 0 and barstate.isconfirmed
    tooltipnote := "Too close to high of day (out of runway?)"
    signal := "H"
    show := 1
else if (C1 + C2 + C4 + C5 + C18 + C19 + C22 + C23 + C25) == 8 and (C25) == 0 and barstate.isconfirmed
    tooltipnote := "Below VWAP 2 standard deviations (on a run!)"
    signal := "V"
    show := 1
if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C8) == 0 and barstate.isconfirmed
    tooltipnote := "1 min 5 EMA > 13 EMA (increasing trend)"
    signal := "↑"
    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C9) == 0 and barstate.isconfirmed
    tooltipnote := "Stoichastic > 0 (oversold may cause bounce)"
    signal := "d"
    show := 2
//else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C10) == 0 and barstate.isconfirmed
//    tooltipnote := "MACD < -0.5 (too little momentum already)"
//    signal := "M\nA\nC\nD"
//    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C11) == 0 and barstate.isconfirmed
    tooltipnote := "ADX < 20 (not trending)"
    signal := "A\nD\nX"
    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C12) == 0 and barstate.isconfirmed
    tooltipnote := "MACD has upward slope (gaining momentum)"
    signal := "M\n/"
    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C16) == 0 and barstate.isconfirmed
    tooltipnote := "ATR > 0.75 (increased volatility)"
    signal := "A\nT\nR"
    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C20) == 0 and barstate.isconfirmed
    tooltipnote := "5 Min 5/13 EMA difference too close (noisy trade)"
    signal := "5"
    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C21) == 0 and barstate.isconfirmed
    tooltipnote := "Candle closes above open (trend reversing?)"
    signal := "C"
    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C24) == 0 and barstate.isconfirmed
    tooltipnote := "Too close to low of day (out of runway?)"
    signal := "L"
    show := 2
else if (C8 + C9 + C11 + C12 + C16 + C20 + C21 + C24 + C26) == 8 and (C26) == 0 and barstate.isconfirmed
    tooltipnote := "Above VWAP 2 standard deviations (on a run!)"
    signal := "V"
    show := 2
if show == 1 or show == 2
    show := 0
if ((buy_signal and strategy.position_size == 0 and allow_trades and allow_long_entry and barstate.isconfirmed)) and time >= TSTAMP
    long_entry_price := open
    strategy.entry("Pivot Up", strategy.long, alert_message = "Pivoting Up")
    stop_loss := long_entry_price - (option_SL_P * open)
    take_profit := long_entry_price + (option_TP_P * open)
    twoxtake_profit := long_entry_price + (2 * option_TP_P * open)
    threextake_profit := long_entry_price + (3 * option_TP_P * open)
    long_entry_time := time
    long_entry_minute := tradingMinute
    allow_long_entry := false
    allow_trades := false
    notify := 1
    entry := 0
if ((high == open) and ((close - low >= 3*(open - close)) and open >= close and (high - low)/high >= option_TP_P and strategy.position_size <= 0 and longpinbars == 1 and barstate.isconfirmed)) and time >= TSTAMP
    long_entry_price := open
    strategy.entry("Pivot Pin Bar Up", strategy.long, alert_message = "Pivoting Pin Bar Up")
    stop_loss := long_entry_price - (option_SL_P * open)
    take_profit := long_entry_price + (option_TP_P * open)
    twoxtake_profit := long_entry_price + (2 * option_TP_P * open)
    threextake_profit := long_entry_price + (3 * option_TP_P * open)
    long_entry_time := time
    long_entry_minute := tradingMinute
    allow_long_entry := false
    allow_trades := false
    notify := 1
    entry := 0
plot(notify == 1 ? open - (option_SL_P * open) : na, "Stop Loss",  color.yellow, style=plot.style_linebr, offset = 1, linewidth = 3, display=display.pane)
plot(notify == 1 ? open + (option_TP_P * open) : na, "Take Profit",  color.yellow, style=plot.style_linebr, offset = 1, linewidth = 3, display=display.pane)
plot(notify == 1 ? open + 2 * (option_TP_P * open) : na, "2x Take Profit",  color.orange, style=plot.style_linebr, offset = 1, linewidth = 2, display=display.pane)
if notify == 1
    notify := notify - 1
if ((short_buy_signal and strategy.position_size == 0 and allow_trades and allow_short_entry)) and time >= TSTAMP
    short_entry_price := open
    strategy.entry("Pivot Down", strategy.short, alert_message = "Pivoting Down")
    short_stop_loss := short_entry_price + (option_SL_P * open)
    short_take_profit := short_entry_price - (option_TP_P * open)
    twoxshort_take_profit := short_entry_price - (2 * option_TP_P * open)
    threexshort_take_profit := short_entry_price - (3 * option_TP_P * open)
    short_entry_time := time
    short_entry_minute := tradingMinute
    allow_short_entry := false
    allow_trades := false
    shortnotify := 1
    entry := 0
if ((close == low) and (high - close >= 3*(close - open)) and open <= close and (high - low)/high >= option_TP_P and strategy.position_size >= 0 and shortpinbars == 1 and barstate.isconfirmed) and time >= TSTAMP
    short_entry_price := open
    strategy.entry("Pivot Pin Bar Down", strategy.short, alert_message = "Pivoting Pin Bar Down")
    short_stop_loss := short_entry_price + (option_SL_P * open)
    short_take_profit := short_entry_price - (option_TP_P * open)
    twoxshort_take_profit := short_entry_price - (2 * option_TP_P * open)
    threexshort_take_profit := short_entry_price - (3 * option_TP_P * open)
    short_entry_time := time
    short_entry_minute := tradingMinute
    allow_short_entry := false
    allow_trades := false
    shortnotify := 1
    entry := 0
plot(shortnotify == 1 ? open + (option_SL_P * open) : na, "Stop Loss",  color.yellow, style=plot.style_linebr, offset = 1, linewidth = 3, display=display.pane)
plot(shortnotify == 1 ? open - (option_TP_P * open) : na, "Take Profit",  color.yellow, style=plot.style_linebr, offset = 1, linewidth = 3, display=display.pane)
plot(shortnotify == 1 ? open - 2 * (option_TP_P * open) : na, "2x Take Profit",  color.orange, style=plot.style_linebr, offset = 1, linewidth = 2, display=display.pane)
if shortnotify == 1 and barstate.isconfirmed
    shortnotify := shortnotify - 1
if strategy.position_size > 0 and barstate.isconfirmed
    if close < stop_loss and barstate.isconfirmed
        strategy.close("Pivot Up", "Exit Longs Stopped", alert_message = "Exit Longs Stopped")
        strategy.close("Pivot Pin Bar Up", "Exit Longs Stopped", alert_message = "Exit Longs Stopped")
    else if close >= twoxtake_profit and (adx <=25 or close < close[3]) and barstate.isconfirmed
        if entry == 1 and barstate.isconfirmed
            take_profit := threextake_profit
        if entry == 0 and barstate.isconfirmed
            entry := 1
            stop_loss := take_profit
            strategy.exit("Exit Longs", "Pivot Up", stop=stop_loss, limit = take_profit, alert_message = "Exit Longs")
            strategy.exit("Exit Longs", "Pivot Pin Bar Up", stop=stop_loss, limit = take_profit, alert_message = "Exit Longs")
    else if src_5m < ema_5m and tradingMinute - long_entry_minute > 3 and (adx <=25 or close < close[3]) and barstate.isconfirmed
        strategy.exit("Exit Longs 5 Min EMA Cross", "Pivot Up", stop=stop_loss, limit = take_profit, alert_message = "Exit Longs 5 Min EMA Cross")
        strategy.exit("Exit Longs 5 Min EMA Cross", "Pivot Pin Bar Up", stop=stop_loss, limit = take_profit, alert_message = "Exit Longs 5 Min EMA Cross")
else if strategy.position_size < 0 and barstate.isconfirmed
    if close > short_stop_loss and barstate.isconfirmed
        strategy.close("Pivot Down", "Exit Shorts Stopped", alert_message = "Exit Shorts Stopped")
        strategy.close("Pivot Pin Bar Down", "Exit Shorts Stopped", alert_message = "Exit Shorts Stopped")
    else if close <= twoxshort_take_profit and (adx <= 25 or close > close[3]) and barstate.isconfirmed
        if entry == 1 and barstate.isconfirmed
            take_profit := threexshort_take_profit
        if entry == 0 and barstate.isconfirmed
            entry := 1
            stop_loss := short_take_profit
            strategy.exit("Exit Shorts", "Pivot Down", stop=short_stop_loss, limit = short_take_profit, alert_message = "Exit Shorts")
            strategy.exit("Exit Shorts", "Pivot Pin Bar Down", stop=short_stop_loss, limit = short_take_profit, alert_message = "Exit Shorts")
    else if src_5m > ema_5m and tradingMinute - short_entry_minute > 3 and (adx <=25 or close > close[3]) and barstate.isconfirmed
        strategy.exit("Exit Shorts 5 Min EMA Cross", "Pivot Down", stop=short_stop_loss, limit = short_take_profit, alert_message = "Exit Shorts 5 Min EMA Cross")
        strategy.exit("Exit Shorts 5 Min EMA Cross", "Pivot Pin Bar Down", stop=short_stop_loss, limit = short_take_profit, alert_message = "Exit Shorts 5 Min EMA Cross")
// Reset allow_trades after cool-down period of min_bars_between_trades bars set above
if time > long_entry_time + (time - time[1]) * min_bars_between_trades and barstate.isconfirmed
    allow_long_entry := true
    allow_trades := true
if time > short_entry_time + (time - time[1]) * min_bars_between_trades and barstate.isconfirmed
    allow_short_entry := true
    allow_trades := true
if hour == 15 and minute >= 55 and barstate.isconfirmed// Last five minutes of trading day
    allow_trades := false
if hour == 9 and minute <= 35 and barstate.isconfirmed// First five minutes of trading day
    allow_trades := false
// Close all positions at the end of trading day
if ((hour == 15 and minute == 57)) and strategy.position_size != 0  and barstate.isconfirmed
    strategy.close("Pivot Up", alert_message = "Market Closing")
    strategy.close("Pivot Down", alert_message = "Market Closing")
    strategy.close("Pivot Pin Bar Up", alert_message = "Market Closing")
    strategy.close("Pivot Pin Bar Down", alert_message = "Market Closing")
    hourlyclose := 1
//plotshape(hourlyclose == 1 ? 1 : na, "Suggested Volatile Hour Close", text="Close positions prior to close", offset = 1, style=shape.triangledown, location=location.abovebar, size=size.tiny, textcolor = color.orange, color=color.orange, display=display.pane)
if hourlyclose == 1 and barstate.isconfirmed
    hourlyclose := 0
Expand (461 lines)