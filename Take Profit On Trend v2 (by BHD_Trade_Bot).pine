Script Name: Take Profit On Trend v2 (by BHD_Trade_Bot)
Author: BHD_Trade_Bot
Description: The purpose of strategy is to detect  long-term uptrend  and  short-term downtrend  so that you can easy to take profit.

The strategy also using  BHD unit  to detect how big you win and lose, so that you can use this strategy for all coins without worry about it have different percentage of price change.


 ENTRY 

The buy order is placed on assets that have...
PineScript code:

Pine Script™ strategy
Take Profit On Trend v2 (by BHD_Trade_Bot)
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © BHD_Trade_Bot
// @version=5
strategy(
 shorttitle            = 'Take Profit On Trend',
 title                 = 'Take Profit On Trend (by BHD_Trade_Bot)',
 overlay               = true,
 calc_on_every_tick    = true,
 calc_on_order_fills   = true,
 use_bar_magnifier     = true,
 initial_capital       = 1000,
 default_qty_type      = strategy.percent_of_equity,
 default_qty_value     = 100,
 commission_type       = strategy.commission.percent,
 commission_value      = 0.1)
// Backtest Time Period
start_year   = input(title='Start year'   ,defval=2021)
start_month  = input(title='Start month'  ,defval=1)
start_day    = input(title='Start day'    ,defval=1)
start_time = timestamp(start_year, start_month, start_day, 00, 00)
end_year     = input(title='end year'     ,defval=2050)
end_month    = input(title='end month'    ,defval=1)
end_day      = input(title='end day'      ,defval=1)
end_time = timestamp(end_year, end_month, end_day, 23, 59)
is_back_test_time() => time >= start_time and time <= end_time ? true : false
// EMA
ema50 = ta.ema(close, 50)
ema200 = ta.ema(close, 200)
// RSI
rsi200 = ta.rsi(close, 200)
// EMA_CD
emacd = ema50 - ema200
emacd_signal = ta.ema(emacd, 50)
hist = emacd - emacd_signal
// BHD Unit
bhd_unit = ta.rma(high - low, 200) * 2
bhd_upper = ema200 + bhd_unit
bhd_lower = ema200 - bhd_unit
// All n candles is going down
all_body_decrease(n) =>
    isValid = true
    for i = 0 to (n - 1)
        if (close[i] > close[i + 1])
            isValid := false
            break
    isValid
// ENTRY CONDITIONS
// Long-term uptrend
entry_condition1 = rsi200 > 51 and hist > 0
// Short-term downtrend
entry_condition2 = all_body_decrease(2)
ENTRY_CONDITIONS = entry_condition1 and entry_condition2
if ENTRY_CONDITIONS and is_back_test_time()
    strategy.entry('entry', strategy.long)
// CLOSE CONDITIONS
// Price increase 2 BHD unit
take_profit = close > strategy.position_avg_price + bhd_unit * 2
// Price decrease 3 BHD unit
stop_loss = close < strategy.position_avg_price - bhd_unit * 3
CLOSE_CONDITIONS = take_profit or stop_loss
if CLOSE_CONDITIONS
    strategy.close('entry')
// Draw
plot(ema50, color=color.orange, linewidth=2)
plot(ema200, color=color.purple, linewidth=2)
bhd_upper_line = plot(bhd_upper, color=color.teal)
bhd_lower_line = plot(bhd_lower, color=color.teal)
fill(bhd_upper_line, bhd_lower_line, color=color.new(color.teal, 90))
Expand (100 lines)