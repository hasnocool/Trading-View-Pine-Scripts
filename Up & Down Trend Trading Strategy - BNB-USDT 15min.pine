Script Name: Up & Down Trend Trading Strategy - BNB-USDT 15min
Author: pcooma
Description: This strategy will focus on up trend trading and down trend trading based on several indicators such as;
for up trend
1. SAR indicator
2. Super trend indicator
3. Simple moving average for the period of 100 

down trend
1. RSI Indicator
2. Money flow index
3. Relative volatility index
4. Balance of powder
PineScript code:

Pine Script™ strategy
Up & Down Trend Trading Strategy - BNB/USDT 15min
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374
1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
1434
1435
1436
1437
1438
1439
1440
1441
1442
1443
1444
1445
1446
1447
1448
1449
1450
1451
1452
1453
1454
1455
1456
1457
1458
1459
1460
1461
1462
1463
1464
1465
1466
1467
1468
1469
1470
1471
1472
1473
1474
1475
1476
1477
1478
1479
1480
1481
1482
1483
1484
1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1497
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1508
1509
1510
1511
1512
1513
1514
1515
1516
1517
1518
1519
1520
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
1536
1537
1538
1539
1540
1541
1542
1543
1544
1545
1546
1547
1548
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1559
1560
1561
1562
1563
1564
1565
1566
1567
1568
1569
1570
1571
1572
1573
1574
1575
1576
1577
1578
1579
1580
1581
1582
1583
1584
1585
1586
1587
1588
1589
1590
1591
1592
1593
1594
1595
1596
1597
1598
1599
1600
1601
1602
1603
1604
1605
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
1618
1619
1620
1621
1622
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
1636
1637
1638
1639
1640
1641
1642
1643
1644
1645
1646
1647
1648
1649
1650
1651
1652
1653
1654
1655
1656
1657
1658
1659
1660
1661
1662
1663
1664
1665
1666
1667
1668
1669
1670
1671
1672
1673
1674
1675
1676
1677
1678
1679
1680
1681
1682
1683
1684
1685
1686
1687
1688
1689
1690
1691
//@ pcooma
// you are wellcome to tweek settings and get yield as you wish
// This startergy optimized to BNB 15 min standerd candlestic chart and buy & sell signals were based on technical analysis. 
//@version=5
strategy("OPV6 - Up & Down Trend Trading Strategy - BNB/USDT 15min", shorttitle="OPV6 U&D - BNB 15min", overlay=true, calc_on_order_fills=false, close_entries_rule = "FIFO", calc_on_every_tick=false, initial_capital = 1000,pyramiding = 999,precision = 4, process_orders_on_close=false, currency = currency.USD, default_qty_type = strategy.cash, default_qty_value = 33, commission_type = strategy.commission.percent, max_lines_count = 500, commission_value = 0.1)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////INPUTS///////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Backtest dates
fromDay                      = input.int(defval     = 01,      title    = "From (DD/MM/YYYY) - ",     minval = 1, maxval = 31,        group = 'Time Period Values', inline = 'From')
fromMonth                    = input.int(defval     = 08,      title    = "/",                        minval = 1, maxval = 12,        group = 'Time Period Values', inline = 'From')
fromYear                     = input.int(defval     = 2021,    title    = "/",                        minval = 1970,                  group = 'Time Period Values', inline = 'From')
thruDay                      = input.int(defval     = 1,       title    = "Thru (DD/MM/YYYY) - ",     minval = 1, maxval = 31,        group = 'Time Period Values', inline = 'Thru')
thruMonth                    = input.int(defval     = 1,       title    = "/",                        minval = 1, maxval = 12,        group = 'Time Period Values', inline = 'Thru')
thruYear                     = input.int(defval     = 2112,    title    = "/",                        minval = 1970,                  group = 'Time Period Values', inline = 'Thru')
start                        = timestamp(fromYear, fromMonth, fromDay, 00, 00)         // backtest start window
finish                       = timestamp(thruYear, thruMonth, thruDay, 23, 59)         // backtest finish window
window()  => 
    time >= start and time <= finish ? true : false                 // create function "within window of time"
//Fund Management
var     trading_option      = input.string(                     title   = "Select Trading option",                                    options=['Uptrend trading', 'Up and Down Trend trading', 'Grid Trading'], defval='Uptrend trading', group = "Fund Management")  
var     int_cap             = input.float(defval    = 5000,     title   = "Cumilative Value of Investment",                           group = "Fund Management")
var     int_val_prc         = input.float(defval    = 20,       title   = "Value of first purchase will be",                          group = "Fund Management",      inline = "Investment",  tooltip  = "Minimum value of initial purchase will be 15USDT" )
var     int_val_allocation  = input.string(title    = "",       options = ['% of cumilative investment', 'USDT'],                     group = "Fund Management",      inline = "Investment",  defval   = 'USDT')  
var     profit_cal          = input.float(defval    = 4,        title   = "Expected profit % is", minval = 0.2, step = 0.1,           group = "profit Calculation")
bool    enable_stoploss     = input.bool(defval     = false,    title   = "Enable stop loss",                                         group = "profit Calculation",   inline = 'stop loss')
var     stop_loss_cal       = input.float(defval    = 10,       title   = "& stop loss % is",                                         group = "profit Calculation",   inline = 'stop loss')
bool    enable_int_profit   = input.bool(defval     = false,    title   = "Profit take",                                              group = "profit Calculation",   inline = 'take')
var     sell_qty_prc        = input.float(defval    = 11.0,     title   = "& quantity is",                                            group = "profit Calculation",   inline = 'take')
var     prc_or_usdt         = input.string(                     title   = "", options=['% of strategy size', 'USDT'], defval='USDT',  group = "profit Calculation",   inline = 'take')  
var     grid_float          = input.float(defval    = 5.0,      title   = "Grid spacing % is",                                        group = "Grid Trading",         inline = 'Grid',    tooltip  = "This section apply if only grid trading is enable")
var     num_grid            = input.int(defval      = 8,        title   = "& numbers of grids is",                                    group = "Grid Trading",         inline = 'Grid',                                                                                            step = 1,  minval = 1, maxval = 49 )
//Up and Down Trend trading
var     piramiding_DT       = input.int(defval      = 15,       title   = "Numbers of pararal entries",                               group = "For Up trend or Up and Down Trend trading trading options")
//Calculation of R value
var     r                   = input.float(defval    = 100,      title   = "r starting value (hypothithical value)",                   group = "Calculation of R value",                   tooltip  = "Supports to calculate R value in background")
var     r_change_nf         = input.float(defval    = 1,        title   = "r step up value (hypothithical value)",                    group = "Calculation of R value",                   tooltip  = "Supports to calculate R value in background & use 0.001 to fine tune",      step = 1,   minval = 0.001)
bool    r_change_final      = input.bool(defval     = false,    title   = "Use r = 0.001 to fine tune r value",                       group = "Calculation of R value")
var     inceiment_1         = input.float(defval    = 31.472,   title   = "Insert Calculated R value from Data Window",               group = "Calculation of R value")
    
//Primary Inputs
// Up trend inputs
src                         = input(defval          = ohlc4,    title   = 'Source of super trend is',                                 group = 'Super Trend values for up trend trading')
Periods                     = input(defval          = 02,       title   = 'ATR Period',                                               group = 'Super Trend values for up trend trading',   inline = 'ART')
Multiplier                  = input.float(defval    = 3.4,      title   = '& Multiplier is',       step=0.1,                          group = 'Super Trend values for up trend trading',   inline = 'ART')
changeATR                   = input(defval          = true,     title   = 'Change ATR Calculation Method ?',                          group = 'Super Trend values for up trend trading')
showsignals                 = input(defval          = false,    title   = 'Show Buy/Sell Signals ?',                                  group = 'Super Trend values for up trend trading')
highlighting                = input(defval          = false,    title   = 'Highlighter On/Off ?',                                     group = 'Super Trend values for up trend trading')
use_cb_to_average           = input.bool(defval     = true,     title   = "Use market bottoms to average",                            group = 'Super Trend values for up trend trading')
//Inputs of SAR Indicator
sar1                        = input.float(defval    = 0.09,     title   = 'Start',                step = 0.0001,                      group = 'SAR Values for up and down trend trading',   inline = 'Start')
sar2                        = input.float(defval    = 0.0091,   title   = 'Incriment',            step = 0.0001,                      group = 'SAR Values for up and down trend trading',   inline = 'Start')
sar3                        = input.float(defval    = 0.02,     title   = 'Max Value',            step = 0.1,                         group = 'SAR Values for up and down trend trading',   inline = 'Start')
bool sar_visible            = input(defval          = false,    title   = "Show SAR",                                                 group = 'SAR Values for up and down trend trading')
// Inputs of Super trend indicator
ST_T                        = input.int(defval      = 19,       title   = 'Trend',                  step =1,                            group = 'Super Trend for up and down trend trading',  inline = 'Trend')
ST_D                        = input.int(defval      = 12,       title   = 'Direction',              step =1,                            group = 'Super Trend for up and down trend trading',  inline = 'Trend')
ST_SMA                      = input.int(defval      = 3,        title   = 'SMA',                    step =1,                            group = 'Super Trend for up and down trend trading',  inline = 'Trend')
bool ST_visible             = input(defval          = false,    title   = "Show Super Trend",                                           group = 'Super Trend for up and down trend trading')
//Inputs of SMA500 indicator
src_sma500                  = input(defval          = hlcc4,    title   = 'Source of SMA500 is',                                        group = 'SMA500 for up and down trend trading',       inline = 'Source')
lb_sma500                   = input.int(defval      = 80,       title   = '& Look back period is', step=10,                             group = 'SMA500 for up and down trend trading',       inline = 'Source')
bool sma500_visible         = input(defval          = false,    title   = "Show SMA500",                                                group = 'SMA500 for up and down trend trading')
var bool dt_grid_trading     = false
if trading_option == 'Grid Trading'
    dt_grid_trading := true
else
    dt_grid_trading := false
    
var float r_change = 0
if r_change_final == false
    r_change := r_change_nf
else if r_change_final == true
    r_change := 0.001
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////UP TREND/////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
atr2 = ta.sma(ta.tr, Periods)
atr = changeATR ? ta.atr(Periods) : atr2
up = src - Multiplier * atr
up1 = nz(up[1], up)
up := close[1] > up1 ? math.max(up, up1) : up
dn = src + Multiplier * atr
dn1 = nz(dn[1], dn)
dn := close[1] < dn1 ? math.min(dn, dn1) : dn
trend = 1
trend := nz(trend[1], trend)
trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend
var bool buySignal = false
var bool sellSignal = false
if trend == 1 and trend[1] == -1
    buySignal := true
else
    buySignal := false
if trend == -1 and trend[1] == 1
    sellSignal := true
else
    sellSignal := false
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////UP TREND AND DOWN TREND//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Calculations
// SMA500 Indicator
SMA500 = ta.sma(src_sma500,lb_sma500)
SMA700 = ta.sma(close,700)
SMA_Open = ta.sma(open,9)
//SMA9 Indicator
SMA9 = ta.sma((high+low)/2,5)
risingSMA9 = ta.rising(SMA9,1)
fallingSMA9 = ta.falling(SMA9,1)
color  plotcolor1 = color.black
if risingSMA9
    plotcolor1 := color.green
// SAR Indicator
sar = ta.sar(sar1, sar2, sar3)
//Supertrend
[supertrend, direction] = ta.supertrend(ST_T, ST_D)
up_trend = ta.sma(direction < 0 ? supertrend : na,ST_SMA)
down_trend = ta.sma(direction < 0? na : supertrend, ST_SMA)
// Color change
color  plotcolor2 = color.green
if open>down_trend or close>down_trend
    plotcolor2 := color.lime
if open<down_trend or close<down_trend
    plotcolor2 := color.red
    
color plotcolor3 = color.green
if open>up_trend or close>up_trend
    plotcolor3 := color.yellow
if open<up_trend or close<up_trend
    plotcolor3 := color.red
color plotcolor4 = color.black
if (open>sar or close>sar) 
    plotcolor4 := color.white
if (open<sar or close<sar)
    plotcolor4 := color.red
    
color plotcolor5 = color.black
if (open>SMA500 or close>SMA500) 
    plotcolor5 := color.green
if (open<SMA500 or close<SMA500) 
    plotcolor5 := color.red
color plotcolor6 = color.green
rising_taalma = ta.rising (ta.alma(open,10,.99,1),1)
falling_taalma = ta.falling (ta.alma(open,10,.99,1),1)
if rising_taalma
    plotcolor6 := color.green
if falling_taalma
    plotcolor6 := color.red
    
// buy and sell conditions for uptrend
longCondition1 = (open >= down_trend or high>= down_trend or ta.crossover(open,down_trend)or ta.crossover(high,down_trend))
longCondition2 = (open >= up_trend or high>= up_trend or ta.crossover(open,up_trend)or ta.crossover(high,up_trend))
longCondition3 = (open >= SMA500 or high>= SMA500 or ta.crossover(open,SMA500)or ta.crossover(high,SMA500))
longCondition4 = (open >= sar or high>= sar or ta.crossover(open,sar)or ta.crossover(high,sar))
longCondition5 = rising_taalma
shortCondition1 = (close < down_trend or low< down_trend or ta.crossunder(close,down_trend)or ta.crossunder(low,down_trend))
shortCondition2 = (close < up_trend or low< up_trend or ta.crossunder(close,up_trend)or ta.crossunder(low,up_trend))
shortCondition3 = (close < SMA500 or low< SMA500 or ta.crossunder(close,SMA500)or ta.crossunder(low,SMA500))
shortCondition4 = (close < sar or low< sar or ta.crossunder(close,sar)or ta.crossunder(low,sar))
shortCondition5 = falling_taalma
comp_buy1 = longCondition1 and longCondition2 and longCondition3 and longCondition4 and longCondition5
op_buy1 = shortCondition3 and longCondition1 and longCondition2 and longCondition4
op_buy2 = shortCondition1 and shortCondition2 and longCondition3 and longCondition4 and longCondition5
comp_sell1 = shortCondition1 and shortCondition2 and shortCondition3 and shortCondition4 and shortCondition5
op_sell1 = shortCondition3 and shortCondition4 and longCondition1 and longCondition2
op_sell2 = shortCondition4 and longCondition1 and longCondition2 and longCondition3
op_sell3 = longCondition2 and shortCondition1 and shortCondition4 and shortCondition3
op_sell4 = longCondition2 and shortCondition1 and shortCondition4
var b1 = 0
var b2 = 0
var b3 = 0
if comp_buy1 == true and comp_buy1[1] == false 
    b1 := 1
else
    b1 := 0
    
if op_buy1 == true and op_buy1[1] == false 
    b2 := 1
else
    b2 := 0
if op_buy2 == true and op_buy2[1] == false 
    b3 := 1
else
    b3 := 0
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////DOWN TREND///////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DCA method based on indicators
//RSI Indicator
src_rsi_10 = input(close,       title = "Source of RSI-10  is",         group = "RSI Indicator for up & down trend trading",                                           inline = 'RSI-10')
len_rsi_10 = input.int(10,      title = "& Look back period is",        group = "RSI Indicator for up & down trend trading",   minval=1,   maxval = 10,    step = 1,   inline = 'RSI-10')
up_rsi_10 = ta.rma(math.max(ta.change(src_rsi_10), 0), len_rsi_10)
down_rsi_10 = ta.rma(-math.min(ta.change(src_rsi_10), 0), len_rsi_10)
rsi_10 = down_rsi_10 == 0 ? 100 : up_rsi_10 == 0 ? 0 : 100 - (100 / (1 + up_rsi_10 / down_rsi_10))
var p_rsi = 0
if rsi_10>= 0 and rsi_10<10
    p_rsi := 0
else if rsi_10>= 10 and rsi_10<20
    p_rsi := 10
else if rsi_10>= 20 and rsi_10<30
    p_rsi := 20
else if rsi_10>= 30 and rsi_10<40
    p_rsi := 30
else if rsi_10>= 40 and rsi_10<50
    p_rsi := 40
else if rsi_10>= 50 and rsi_10<60
    p_rsi := 50
else if rsi_10>= 60 and rsi_10<70
    p_rsi := 60
else if rsi_10>= 70 and rsi_10<80
    p_rsi := 70
else if rsi_10>= 80 and rsi_10<90
    p_rsi := 80
else if rsi_10>= 90 and rsi_10<100
    p_rsi := 90
src_rsi_50 = input(hlcc4,       title = "Source of RSI-50 is",          group = "RSI Indicator for up & down trend trading",                                            inline = 'RSI-50')
len_rsi_50 = input.int(50,      title = "& Look back period is",        group = "RSI Indicator for up & down trend trading",   minval=11,  maxval = 50,    step = 1,    inline = 'RSI-50')
up_rsi_50 = ta.rma(math.max(ta.change(src_rsi_50), 0), len_rsi_50)
down_rsi_50 = ta.rma(-math.min(ta.change(src_rsi_50), 0), len_rsi_50)
rsi_50 = down_rsi_50 == 0 ? 100 : up_rsi_50 == 0 ? 0 : 100 - (100 / (1 + up_rsi_50 / down_rsi_50))
var p_rsi_50 = 0
if rsi_50>= 0 and rsi_50<10
    p_rsi_50 := 0
else if rsi_50>= 10 and rsi_50<20
    p_rsi_50 := 10
else if rsi_50>= 20 and rsi_50<30
    p_rsi_50 := 20
else if rsi_50>= 30 and rsi_50<40
    p_rsi_50 := 30
else if rsi_50>= 40 and rsi_50<50
    p_rsi_50 := 40
else if rsi_50>= 50 and rsi_50<60
    p_rsi_50 := 50
else if rsi_50>= 60 and rsi_50<70
    p_rsi_50 := 60
else if rsi_50>= 70 and rsi_50<80
    p_rsi_50 := 70
else if rsi_50>= 80 and rsi_50<90
    p_rsi_50 := 80
else if rsi_50>= 90 and rsi_50<100
    p_rsi_50 := 90
src_rsi_100 = input(hlcc4,      title = "Source of RSI-100 is",         group = "RSI Indicator for up & down trend trading",                                            inline = 'RSI-100')
len_rsi_100 = input.int(100,    title = "& Look back period is",        group = "RSI Indicator for up & down trend trading",  minval=51,  maxval = 200,   step = 10,    inline = 'RSI-100')
up_rsi_100 = ta.rma(math.max(ta.change(src_rsi_100), 0), len_rsi_100)
down_rsi_100 = ta.rma(-math.min(ta.change(src_rsi_100), 0), len_rsi_100)
rsi_100 = down_rsi_100 == 0 ? 100 : up_rsi_100 == 0 ? 0 : 100 - (100 / (1 + up_rsi_100 / down_rsi_100))
var p_rsi_100 = 0
if rsi_100>= 0 and rsi_100<10
    p_rsi_100 := 0
else if rsi_100>= 10 and rsi_100<20
    p_rsi_100 := 10
else if rsi_100>= 20 and rsi_100<30
    p_rsi_100 := 20
else if rsi_100>= 30 and rsi_100<40
    p_rsi_100 := 30
else if rsi_100>= 40 and rsi_100<50
    p_rsi_100 := 40
else if rsi_100>= 50 and rsi_100<60
    p_rsi_100 := 50
else if rsi_100>= 60 and rsi_100<70
    p_rsi_100 := 60
else if rsi_100>= 70 and rsi_100<80
    p_rsi_100 := 70
else if rsi_100>= 80 and rsi_100<90
    p_rsi_100 := 80
else if rsi_100>= 90 and rsi_100<100
    p_rsi_100 := 90
// Relative Volatility Indicator
src_rvi_10 = input(hlc3,                                                                title = "Source of RVI-10 is",              group = "RVI Indicator for up & down trend trading",  inline = 'RVI-10')
length_rvi_10 = input.int(defval = 10,      minval=1,       maxval = 10,    step = 1,   title = "Look back period of RVI-10 is",    group = "RVI Indicator for up & down trend trading",  inline = 'Look back period of RVI-10')
len_rvi_10 = input.int(defval = 10,         minval=1,       maxval = 10,    step = 1,   title = "& EMA is",                         group = "RVI Indicator for up & down trend trading",  inline = 'Look back period of RVI-10')
stddev_rvi_10 = ta.stdev(src_rvi_10, length_rvi_10)
upper_rvi_10 = ta.ema(ta.change(src_rvi_10) <= 0 ? 0 : stddev_rvi_10, len_rvi_10)
lower_rvi_10 = ta.ema(ta.change(src_rvi_10) > 0 ? 0 : stddev_rvi_10, len_rvi_10)
rvi_10 = upper_rvi_10 / (upper_rvi_10 + lower_rvi_10) * 100
var p_rvi_10 = 0
if rvi_10 >= 0 and rvi_10 <10
    p_rvi_10 := 0
else if rvi_10 >= 10 and rvi_10 <20
    p_rvi_10 := 10
else if rvi_10 >= 20 and rvi_10 <30
    p_rvi_10 := 20
else if rvi_10 >= 30 and rvi_10 <40
    p_rvi_10 := 30
else if rvi_10 >= 40 and rvi_10 <50
    p_rvi_10 := 40
else if rvi_10 >= 50 and rvi_10 <60
    p_rvi_10 := 50
else if rvi_10 >= 60 and rvi_10 <70
    p_rvi_10 := 60
else if rvi_10 >= 70 and rvi_10 <80
    p_rvi_10 := 70
else if rvi_10 >= 80 and rvi_10 <90
    p_rvi_10 := 80
else if rvi_10 >= 90 and rvi_10 <100
    p_rvi_10 := 90
src_rvi_50 = input(hlc3,                                                                        title = "Source of RVI-50 is",              group = "RVI Indicator for up & down trend trading",  inline = 'RVI-50')
length_rvi_50 = input.int(defval = 50,      minval=11,      maxval = 50,        step = 1,       title="Look back period of RVI-50 is",      group = "RVI Indicator for up & down trend trading",  inline = 'Look back period of RVI-50')
len_rvi_50 = input.int(defval = 50,         minval=11,      maxval = 50,        step = 1,       title="& EMA is",                           group = "RVI Indicator for up & down trend trading",  inline = 'Look back period of RVI-50')
stddev_rvi_50 = ta.stdev(src_rvi_50, length_rvi_50)
upper_rvi_50 = ta.ema(ta.change(src_rvi_50) <= 0 ? 0 : stddev_rvi_50, len_rvi_50)
lower_rvi_50 = ta.ema(ta.change(src_rvi_50) > 0 ? 0 : stddev_rvi_50, len_rvi_50)
rvi_50 = upper_rvi_50 / (upper_rvi_50 + lower_rvi_50) * 100
var p_rvi_50 = 0
if rvi_50 >= 0 and rvi_50 <10
    p_rvi_50 := 0
else if rvi_50 >= 10 and rvi_50 <20
    p_rvi_50 := 10
else if rvi_50 >= 20 and rvi_50 <30
    p_rvi_50 := 20
else if rvi_50 >= 30 and rvi_50 <40
    p_rvi_50 := 30
else if rvi_50 >= 40 and rvi_50 <50
    p_rvi_50 := 40
else if rvi_50 >= 50 and rvi_50 <60
    p_rvi_50 := 50
else if rvi_50 >= 60 and rvi_50 <70
    p_rvi_50 := 60
else if rvi_50 >= 70 and rvi_50 <80
    p_rvi_50 := 70
else if rvi_50 >= 80 and rvi_50 <90
    p_rvi_50 := 80
else if rvi_50 >= 90 and rvi_50 <100
    p_rvi_50 := 90
src_rvi_100 = input(hlcc4,                                                              title = "Source of RVI-100 is",             group = "RVI Indicator for up & down trend trading",  inline = 'RVI-100')
length_rvi_100 = input.int(defval = 100,        minval=51,  maxval = 200,   step = 10,  title = "Look back period of RVI-100 is",   group = "RVI Indicator for up & down trend trading",  inline = 'Look back period of RVI-100')
len_rvi_100 = input.int(defval = 100,           minval=51,  maxval = 200,   step = 10,  title = "& EMA is",                         group = "RVI Indicator for up & down trend trading",  inline = 'Look back period of RVI-100')
stddev_rvi_100 = ta.stdev(src_rvi_100, length_rvi_100)
upper_rvi_100 = ta.ema(ta.change(src_rvi_100) <= 0 ? 0 : stddev_rvi_100, len_rvi_100)
lower_rvi_100 = ta.ema(ta.change(src_rvi_100) > 0 ? 0 : stddev_rvi_100, len_rvi_100)
rvi_100 = upper_rvi_100 / (upper_rvi_100 + lower_rvi_100) * 100
var p_rvi_100 = 0
if rvi_100 >= 0 and rvi_100 <10
    p_rvi_100 := 0
else if rvi_100 >= 10 and rvi_100 <20
    p_rvi_100 := 10
else if rvi_100 >= 20 and rvi_100 <30
    p_rvi_100 := 20
else if rvi_100 >= 30 and rvi_100 <40
    p_rvi_100 := 30
else if rvi_100 >= 40 and rvi_100 <50
    p_rvi_100 := 40
else if rvi_100 >= 50 and rvi_100 <60
    p_rvi_100 := 50
else if rvi_100 >= 60 and rvi_100 <70
    p_rvi_100 := 60
else if rvi_100 >= 70 and rvi_100 <80
    p_rvi_100 := 70
else if rvi_100 >= 80 and rvi_100 <90
    p_rvi_100 := 80
else if rvi_100 >= 90 and rvi_100 <100
    p_rvi_100 := 90
// Money flow index
src_mfi_10 = input(open,                                                                    title = "Source of MFI-10 is",      group = "MFI Indicator for up & down trend trading",  inline = 'Source of MFI-10')
len_mfi_10 = input.int(defval = 10,         minval=1,           maxval = 10,    step = 1,   title = "& Look back period is",    group = "MFI Indicator for up & down trend trading",  inline = 'Source of MFI-10')
mf_10 = ta.mfi(src_mfi_10, len_mfi_10)
var p_mfi_10 = 0
if mf_10>= 0 and mf_10<10
    p_mfi_10 := 0
else if mf_10>= 10 and mf_10<20
    p_mfi_10 := 10
else if mf_10>= 20 and mf_10<30
    p_mfi_10 := 20
else if mf_10>= 30 and mf_10<40
    p_mfi_10 := 30
else if mf_10>= 40 and mf_10<50
    p_mfi_10 := 40
else if mf_10>= 50 and mf_10<60
    p_mfi_10 := 50
else if mf_10>= 60 and mf_10<70
    p_mfi_10 := 60
else if mf_10>= 70 and mf_10<80
    p_mfi_10 := 70
else if mf_10>= 80 and mf_10<90
    p_mfi_10 := 80
else if mf_10>= 90 and mf_10<100
    p_mfi_10 := 90
src_mfi_50 = input(high,                                                        title = "Source of MFI-50 is",      group = "MFI Indicator for up & down trend trading",  inline = 'Source of MFI-50')
len_mfi_50 = input.int(defval = 50,     minval=11,  maxval = 50,    step = 1,   title="& Look back period is",      group = "MFI Indicator for up & down trend trading",  inline = 'Source of MFI-50')
mf_50 = ta.mfi(src_mfi_50, len_mfi_50)
var p_mfi_50 = 0
if mf_50>= 0 and mf_50<10
    p_mfi_50 := 0
else if mf_50>= 10 and mf_50<20
    p_mfi_50 := 10
else if mf_50>= 20 and mf_50<30
    p_mfi_50 := 20
else if mf_50>= 30 and mf_50<40
    p_mfi_50 := 30
else if mf_50>= 40 and mf_50<50
    p_mfi_50 := 40
else if mf_50>= 50 and mf_50<60
    p_mfi_50 := 50
else if mf_50>= 60 and mf_50<70
    p_mfi_50 := 60
else if mf_50>= 70 and mf_50<80
    p_mfi_50 := 70
else if mf_50>= 80 and mf_50<90
    p_mfi_50 := 80
else if mf_50>= 90 and mf_50<100
    p_mfi_50 := 90
src_mfi_100 = input(low,                                                                    title = "Source of MFI-100 is",     group = "MFI Indicator for up & down trend trading",  inline = 'Source of MFI-100')
len_mfi_100 = input.int(defval = 100,       minval=51,          maxval = 200,   step = 10,  title="& Look back period is",      group = "MFI Indicator for up & down trend trading",  inline = 'Source of MFI-100')
mf_100 = ta.mfi(src_mfi_100, len_mfi_100)
var p_mfi_100 = 0
if mf_100>= 0 and mf_100<10
    p_mfi_100 := 0
else if mf_100>= 10 and mf_100<20
    p_mfi_100 := 10
else if mf_100>= 20 and mf_100<30
    p_mfi_100 := 20
else if mf_100>= 30 and mf_100<40
    p_mfi_100 := 30
else if mf_100>= 40 and mf_100<50
    p_mfi_100 := 40
else if mf_100>= 50 and mf_100<60
    p_mfi_100 := 50
else if mf_100>= 60 and mf_100<70
    p_mfi_100 := 60
else if mf_100>= 70 and mf_100<80
    p_mfi_100 := 70
else if mf_100>= 80 and mf_100<90
    p_mfi_100 := 80
else if mf_100>= 90 and mf_100<100
    p_mfi_100 := 90
//Balance of power indicator
bop = ((((close - open) / (high - low))*100)+50)
bop_sma_100 = ta.sma(bop,50)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////HH & LL in 100 days period///////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
lookback    =   input.int   (defval = 50,       title = "Look back period for Lower lows and Higher highes",    group = "Lower lows and Higher highes for up & down trend trading")
show_LL_HH  =   input.bool  (defval = false,    title = "Show Lower lows and Higher highes chart",              group = "Lower lows and Higher highes for up & down trend trading")
lowest = ta.lowest(low, lookback)
var float b = lowest
if lowest[1] < lowest
    b := b
else if lowest[1] > lowest
    b := lowest
highest = ta.highest(high,lookback)
var float c = highest
if highest[1] < highest
    c := highest
else if highest[1] > highest
    c := c
    
var float d = c
if c[1] < c
    d := c
else if c[1] > c
    d := d
    
var float e = d
if d[1] <= d
    e := d
else if d[1] >= d
    e := e
gap_p = math.abs((b - c)*100/c)
var float saf = 0
if gap_p >= 10
    saf := 1 + gap_p/100
else if gap_p < 10 and gap_p > 2
    saf :=  (1 + gap_p/100)
else if gap_p <= 2
    saf := na
bool buy = ta.cross(b,low) and b[1] > b //and b[2] > b[1]
bool sell = ta.cross(high,e) or ta.cross(e,close) or ta.cross(open,e) or ta.cross(low,e)
var float signal = 0
if buy == true
    signal := 1
else if signal == 1 and ((open > close) or (open[2] > close))
    signal := 2
else if signal == 2 and (open < close)
    signal := 3
else if signal == 3 and ((open < close) or (open > close))
    signal := 0
else 
    signal := 0
sma = ta.sma(close,9)
middle = ta.sma(close,500)
l1_cross = ta.cross(sma,strategy.position_avg_price*0.98)
l2_cross = ta.cross(sma,strategy.position_avg_price*0.9)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////Down Trand Grid Trading//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var float entry_price = 0
var float level1 = 0
var float level2 = 0
var float level3 = 0
var float level4 = 0
var float level5 = 0
var float level6 = 0
var float level7 = 0
var float level8 = 0
var float level9 = 0
var float level10 = 0
var float level11 = 0
var float level12 = 0
var float level13 = 0
var float level14 = 0
var float level15 = 0
var float level16 = 0
var float level17 = 0
var float level18 = 0
var float level19 = 0
var float level20 = 0
var float level21 = 0
var float level22 = 0
var float level23 = 0
var float level24 = 0
var float level25 = 0
var float level26 = 0
var float level27 = 0
var float level28 = 0
var float level29 = 0
var float level30 = 0
var float level31 = 0
var float level32 = 0
var float level33 = 0
var float level34 = 0
var float level35 = 0
var float level36 = 0
var float level37 = 0
var float level38 = 0
var float level39 = 0
var float level40 = 0
var float level41 = 0
var float level42 = 0
var float level43 = 0
var float level44 = 0
var float level45 = 0
var float level46 = 0
var float level47 = 0
var float level48 = 0
var float level49 = 0
if strategy.opentrades == 1
    entry_price := strategy.position_avg_price
else if strategy.opentrades == 0
    entry_price := na
//Graph arrangement
if num_grid <= 10
    level1 := entry_price * (1 - grid_float/100)
if num_grid > 1
    level2 := entry_price * (1 - 2*grid_float/100)
else 
    level2 := na
if num_grid > 2
    level3 := entry_price * (1 - 3*grid_float/100)
else 
    level3 := na
if num_grid > 3
    level4 := entry_price * (1 - 4*grid_float/100)
else 
    level4 := na
    
if num_grid > 4
    level5 := entry_price * (1 - 5*grid_float/100)
else 
    level5 := na
    
if num_grid > 5
    level6 := entry_price * (1 - 6*grid_float/100)
else 
    level6 := na
    
if num_grid > 6
    level7 := entry_price * (1 - 7*grid_float/100)
else 
    level7 := na
    
if num_grid > 7
    level8 := entry_price * (1 - 8*grid_float/100)
else 
    level8 := na
    
if num_grid > 8
    level9 := entry_price * (1 - 9*grid_float/100)
else 
    level9 := na
if num_grid > 9
    level10 := entry_price * (1 - 10*grid_float/100)
else 
    level10 := na
    
if num_grid > 10
    level11 := entry_price * (1 - 11*grid_float/100)
else 
    level11 := na
    
if num_grid > 11
    level12 := entry_price * (1 - 12*grid_float/100)
else 
    level12 := na
if num_grid > 12
    level13 := entry_price * (1 - 13*grid_float/100)
else 
    level13 := na
if num_grid > 13
    level14 := entry_price * (1 - 14*grid_float/100)
else 
    level14 := na
if num_grid > 14
    level15 := entry_price * (1 - 15*grid_float/100)
else 
    level15 := na
if num_grid > 15
    level16 := entry_price * (1 - 16*grid_float/100)
else 
    level16 := na
if num_grid > 16
    level17 := entry_price * (1 - 17*grid_float/100)
else 
    level17 := na
if num_grid > 17
    level18 := entry_price * (1 - 18*grid_float/100)
else 
    level18 := na
if num_grid > 18
    level19 := entry_price * (1 - 19*grid_float/100)
else 
    level19 := na
if num_grid > 19
    level20 := entry_price * (1 - 20*grid_float/100)
else 
    level20 := na
if num_grid > 20
    level21 := entry_price * (1 - 21*grid_float/100)
else 
    level21 := na
if num_grid > 21
    level22 := entry_price * (1 - 22*grid_float/100)
else 
    level22 := na
if num_grid > 22
    level23 := entry_price * (1 - 23*grid_float/100)
else 
    level23 := na
if num_grid > 23
    level24 := entry_price * (1 - 24*grid_float/100)
else 
    level24 := na
if num_grid > 24
    level25 := entry_price * (1 - 25*grid_float/100)
else 
    level25 := na
if num_grid > 25
    level26 := entry_price * (1 - 26*grid_float/100)
else 
    level26 := na
if num_grid > 26
    level27 := entry_price * (1 - 27*grid_float/100)
else 
    level27 := na
if num_grid > 27
    level28 := entry_price * (1 - 28*grid_float/100)
else 
    level28 := na
if num_grid > 28
    level29 := entry_price * (1 - 29*grid_float/100)
else 
    level29 := na
if num_grid > 29
    level30 := entry_price * (1 - 30*grid_float/100)
else 
    level30 := na
if num_grid > 30
    level31 := entry_price * (1 - 31*grid_float/100)
else 
    level31 := na
    
if num_grid > 31
    level32 := entry_price * (1 - 32*grid_float/100)
else 
    level32 := na
if num_grid > 32
    level33 := entry_price * (1 - 33*grid_float/100)
else 
    level33 := na
if num_grid > 33
    level34 := entry_price * (1 - 34*grid_float/100)
else 
    level34 := na
if num_grid > 34
    level35 := entry_price * (1 - 35*grid_float/100)
else 
    level35 := na
if num_grid > 35
    level36 := entry_price * (1 - 36*grid_float/100)
else 
    level36 := na
if num_grid > 36
    level37 := entry_price * (1 - 37*grid_float/100)
else 
    level37 := na
if num_grid > 37
    level38 := entry_price * (1 - 38*grid_float/100)
else 
    level38 := na
if num_grid > 38
    level39 := entry_price * (1 - 39*grid_float/100)
else 
    level39 := na
if num_grid > 39
    level40 := entry_price * (1 - 40*grid_float/100)
else 
    level40 := na
    
if num_grid > 40
    level41 := entry_price * (1 - 41*grid_float/100)
else 
    level41 := na
if num_grid > 41
    level42 := entry_price * (1 - 42*grid_float/100)
else 
    level42 := na
if num_grid > 42
    level43 := entry_price * (1 - 43*grid_float/100)
else 
    level43 := na
if num_grid > 43
    level44 := entry_price * (1 - 44*grid_float/100)
else 
    level44 := na
if num_grid > 44
    level45 := entry_price * (1 - 45*grid_float/100)
else 
    level45 := na
if num_grid > 45
    level46 := entry_price * (1 - 46*grid_float/100)
else 
    level46 := na
if num_grid > 46
    level47 := entry_price * (1 - 47*grid_float/100)
else 
    level47 := na
if num_grid > 47
    level48 := entry_price * (1 - 48*grid_float/100)
else 
    level48 := na
if num_grid > 48
    level49 := entry_price * (1 - 49*grid_float/100)
else 
    level49 := na
//seting up buy possitions
var bool buy_possition_1 = false
var bool buy_possition_2 = false
var bool buy_possition_3 = false
var bool buy_possition_4 = false
var bool buy_possition_5 = false
var bool buy_possition_6 = false
var bool buy_possition_7 = false
var bool buy_possition_8 = false
var bool buy_possition_9 = false
var bool buy_possition_10 = false
var bool buy_possition_11 = false
var bool buy_possition_12 = false
var bool buy_possition_13 = false
var bool buy_possition_14 = false
var bool buy_possition_15 = false
var bool buy_possition_16 = false
var bool buy_possition_17 = false
var bool buy_possition_18 = false
var bool buy_possition_19 = false
var bool buy_possition_20 = false
var bool buy_possition_21 = false
var bool buy_possition_22 = false
var bool buy_possition_23 = false
var bool buy_possition_24 = false
var bool buy_possition_25 = false
var bool buy_possition_26 = false
var bool buy_possition_27 = false
var bool buy_possition_28 = false
var bool buy_possition_29 = false
var bool buy_possition_30 = false
var bool buy_possition_31 = false
var bool buy_possition_32 = false
var bool buy_possition_33 = false
var bool buy_possition_34 = false
var bool buy_possition_35 = false
var bool buy_possition_36 = false
var bool buy_possition_37 = false
var bool buy_possition_38 = false
var bool buy_possition_39 = false
var bool buy_possition_40 = false
var bool buy_possition_41 = false
var bool buy_possition_42 = false
var bool buy_possition_43 = false
var bool buy_possition_44 = false
var bool buy_possition_45 = false
var bool buy_possition_46 = false
var bool buy_possition_47 = false
var bool buy_possition_48 = false
var bool buy_possition_49 = false
if strategy.opentrades < 2 and close[1] < level1 and signal == 2
    buy_possition_1 := true
else 
    buy_possition_1 := false
    
if strategy.opentrades < 3 and close[1] < level2 and signal == 2
    buy_possition_2 := true
else 
    buy_possition_2 := false  
if strategy.opentrades < 4 and close[1] < level3 and signal == 2
    buy_possition_3 := true
else 
    buy_possition_3 := false
    
if strategy.opentrades < 5 and close[1] < level4 and signal == 2
    buy_possition_4 := true
else 
    buy_possition_4 := false
   
if strategy.opentrades < 6 and close[1] < level5 and signal == 2
    buy_possition_5 := true
else 
    buy_possition_5 := false
if strategy.opentrades < 7 and close[1] < level6 and signal == 2
    buy_possition_6 := true
else 
    buy_possition_6 := false
    
if strategy.opentrades < 8 and close[1] < level7 and signal == 2
    buy_possition_7 := true
else 
    buy_possition_7 := false
    
if strategy.opentrades < 9 and close[1] < level8 and signal == 2
    buy_possition_8 := true
else 
    buy_possition_8 := false
    
if strategy.opentrades < 10 and close[1] < level9 and signal == 2
    buy_possition_9 := true
else 
    buy_possition_9 := false
if strategy.opentrades < 11 and close[1] < level10 and signal == 2
    buy_possition_10 := true
else 
    buy_possition_10 := false
if strategy.opentrades < 12 and close[1] < level11 and signal == 2
    buy_possition_11 := true
else 
    buy_possition_11 := false
if strategy.opentrades < 13 and close[1] < level12 and signal == 2
    buy_possition_12 := true
else 
    buy_possition_12 := false
if strategy.opentrades < 14 and close[1] < level13 and signal == 2
    buy_possition_13 := true
else 
    buy_possition_13 := false
if strategy.opentrades < 15 and close[1] < level14 and signal == 2
    buy_possition_14 := true
else 
    buy_possition_14 := false
if strategy.opentrades < 16 and close[1] < level15 and signal == 2
    buy_possition_15 := true
else 
    buy_possition_15 := false
if strategy.opentrades < 17 and close[1] < level16 and signal == 2
    buy_possition_16 := true
else 
    buy_possition_16 := false
if strategy.opentrades < 18 and close[1] < level17 and signal == 2
    buy_possition_17 := true
else 
    buy_possition_17 := false
if strategy.opentrades < 19 and close[1] < level18 and signal == 2
    buy_possition_18 := true
else 
    buy_possition_18 := false
if strategy.opentrades < 20 and close[1] < level19 and signal == 2
    buy_possition_19 := true
else 
    buy_possition_19 := false
if strategy.opentrades < 21 and close[1] < level20 and signal == 2
    buy_possition_20 := true
else 
    buy_possition_20 := false
if strategy.opentrades < 22 and close[1] < level21 and signal == 2
    buy_possition_21 := true
else 
    buy_possition_21 := false
if strategy.opentrades < 23 and close[1] < level22 and signal == 2
    buy_possition_22 := true
else 
    buy_possition_22 := false
if strategy.opentrades < 24 and close[1] < level23 and signal == 2
    buy_possition_23 := true
else 
    buy_possition_23 := false
if strategy.opentrades < 25 and close[1] < level24 and signal == 2
    buy_possition_24 := true
else 
    buy_possition_24 := false
if strategy.opentrades < 26 and close[1] < level25 and signal == 2
    buy_possition_25 := true
else 
    buy_possition_25 := false
if strategy.opentrades < 27 and close[1] < level26 and signal == 2
    buy_possition_26 := true
else 
    buy_possition_26 := false
if strategy.opentrades < 28 and close[1] < level27 and signal == 2
    buy_possition_27 := true
else 
    buy_possition_27 := false
if strategy.opentrades < 29 and close[1] < level28 and signal == 2
    buy_possition_28 := true
else 
    buy_possition_28 := false
if strategy.opentrades < 30 and close[1] < level29 and signal == 2
    buy_possition_29 := true
else 
    buy_possition_29 := false
if strategy.opentrades < 31 and close[1] < level30 and signal == 2
    buy_possition_30 := true
else 
    buy_possition_30 := false
if strategy.opentrades < 32 and close[1] < level31 and signal == 2
    buy_possition_31 := true
else 
    buy_possition_31 := false
if strategy.opentrades < 33 and close[1] < level32 and signal == 2
    buy_possition_32 := true
else 
    buy_possition_32 := false
if strategy.opentrades < 34 and close[1] < level33 and signal == 2
    buy_possition_33 := true
else 
    buy_possition_33 := false
if strategy.opentrades < 35 and close[1] < level34 and signal == 2
    buy_possition_34 := true
else 
    buy_possition_34 := false
    
if strategy.opentrades < 36 and close[1] < level35 and signal == 2
    buy_possition_35 := true
else 
    buy_possition_35 := false
if strategy.opentrades < 36 and close[1] < level35 and signal == 2
    buy_possition_35 := true
else 
    buy_possition_35 := false
if strategy.opentrades < 37 and close[1] < level36 and signal == 2
    buy_possition_36 := true
else 
    buy_possition_36 := false
if strategy.opentrades < 38 and close[1] < level37 and signal == 2
    buy_possition_37 := true
else 
    buy_possition_37 := false
if strategy.opentrades < 39 and close[1] < level38 and signal == 2
    buy_possition_38 := true
else 
    buy_possition_38 := false
if strategy.opentrades < 40 and close[1] < level39 and signal == 2
    buy_possition_39 := true
else 
    buy_possition_39 := false
if strategy.opentrades < 41 and close[1] < level40 and signal == 2
    buy_possition_40 := true
else 
    buy_possition_40 := false
if strategy.opentrades < 42 and close[1] < level41 and signal == 2
    buy_possition_41 := true
else 
    buy_possition_41 := false
if strategy.opentrades < 43 and close[1] < level42 and signal == 2
    buy_possition_42 := true
else 
    buy_possition_42 := false
if strategy.opentrades < 44 and close[1] < level43 and signal == 2
    buy_possition_43 := true
else 
    buy_possition_43 := false
if strategy.opentrades < 45 and close[1] < level44 and signal == 2
    buy_possition_44 := true
else 
    buy_possition_44 := false
if strategy.opentrades < 46 and close[1] < level45 and signal == 2
    buy_possition_45 := true
else 
    buy_possition_45 := false
if strategy.opentrades < 47 and close[1] < level46 and signal == 2
    buy_possition_46 := true
else 
    buy_possition_46 := false
if strategy.opentrades < 48 and close[1] < level47 and signal == 2
    buy_possition_47 := true
else 
    buy_possition_47 := false
if strategy.opentrades < 49 and close[1] < level48 and signal == 2
    buy_possition_48 := true
else 
    buy_possition_48 := false
if strategy.opentrades < 50 and close[1] < level49 and signal == 2
    buy_possition_49 := true
else 
    buy_possition_49 := false
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////TRADING ARRANGEMENT//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Fund management
var float int_val_3 = 0
var float installment_2 = 0
var float installment_3 = 0
var float installment_4 = 0
var float r_f = 0
var float int_val = 0
if int_cap * int_val_prc/100 <= 20 and int_val_allocation != "USDT"
    int_val := 20
if int_val_prc <= 20 and int_val_allocation == "USDT"
    int_val := 20
if int_cap * int_val_prc/100 > 20 and int_val_allocation != "USDT"
    int_val := int_cap * int_val_prc/100
if int_val_prc > 20 and int_val_allocation == "USDT"
    int_val := int_val_prc
var float piramiding = 0
if dt_grid_trading == false
    piramiding := piramiding_DT
else if dt_grid_trading == true
    piramiding := num_grid
for i = 0 to piramiding+2 by 1
    if i == 0
        int_val_3 := int_val
    if i <= piramiding
        installment_2 := int_val_3*math.pow((1 + r/100),i)
    if i >= 0 and i < piramiding+1
        installment_3 := installment_3 + installment_2
    if i == piramiding+1
        installment_4 := installment_3 - installment_3[1]
if installment_4 < int_cap
    r := r + r_change
else if installment_4 > int_cap
    r := r - r_change
else 
    r := r
    
if r[1] < r
    r_f := r[1] 
plot(r_f, title = "Calculated R value")
// Buy and Sell lavels based on Indicators
gh_val_rsi = input.int  (defval = 50, title = "Higher value of RSI",    maxval = 100, minval = 0, step = 10, group = 'Indicator Higher Values')
gh_val_rvi = input.int  (defval = 50, title = "Higher value of RVI",    maxval = 100, minval = 0, step = 10, group = 'Indicator Higher Values')
gh_val_mfi = input.int  (defval = 50, title = "Higher value of MFI",    maxval = 100, minval = 0, step = 10, group = 'Indicator Higher Values')
gh_val_bop = input.int  (defval = 50, title = "Higher value of BOP",    maxval = 100, minval = 0, step = 10, group = 'Indicator Higher Values')
l_val_rsi = input.int   (defval = 50, title = "Lower value of RSI",     maxval = 100, minval = 0, step = 10, group = 'Indicator Lower Values')
l_val_rvi = input.int   (defval = 50, title = "Lower value of RVI",     maxval = 100, minval = 0, step = 10, group = 'Indicator Lower Values')
l_val_mfi = input.int   (defval = 50, title = "Lower value of MFI",     maxval = 100, minval = 0, step = 10, group = 'Indicator Lower Values')
l_val_bop = input.int   (defval = 50, title = "Lower value of BOP",     maxval = 100, minval = 0, step = 10, group = 'Indicator Lower Values')
//Identify general market bottoms
buy_rsi = p_rsi_100 <= l_val_rsi and p_rsi_50<p_rsi_100 and p_rsi<=p_rsi_50
buy_rvi = p_rvi_100 <= l_val_rvi and p_rvi_50<=p_rvi_100 and p_rvi_10<=p_rvi_50
buy_mfi = p_mfi_100 <= l_val_mfi and p_mfi_50<=p_mfi_100 and p_mfi_10<=p_mfi_50
buy_bop = bop_sma_100 <= l_val_bop
buy_compound = buy_rsi and buy_rvi and buy_mfi and buy_bop ? 100 : 0
// Identify critical bottoms
cb_rsi = p_rsi_100 <= 30 and p_rsi_50<p_rsi_100 and p_rsi<=p_rsi_50
cb_rvi = p_rvi_100 <= 30 and p_rvi_50<=p_rvi_100 and p_rvi_10<=p_rvi_50
cb_mfi = p_mfi_100 <= 30 and p_mfi_50<=p_mfi_100 and p_mfi_10<=p_mfi_50
cb_bop = bop_sma_100 <= 50
cb_compound = cb_rsi and cb_rvi and cb_mfi and cb_bop ? 100 : 0
//Identify critical market ups
hh_rsi = p_rsi_100 >= 60 and p_rsi_50 > p_rsi_100 and p_rsi >= p_rsi_50
hh_rvi = p_rvi_100 >= 60 and p_rvi_50 >= p_rvi_100 and p_rvi_10 >= p_rvi_50
hh_mfi = p_mfi_100 >= 60 and p_mfi_50 >= p_mfi_100 and p_mfi_10 >= p_mfi_50
hh_bop = bop_sma_100 >= 60
hh_compund = hh_rsi and hh_rvi and hh_mfi and hh_bop ? 100:0
//Identify general market ups
gh_rsi = p_rsi_100 >= gh_val_rsi and p_rsi_50 > p_rsi_100 and p_rsi >= p_rsi_50
gh_rvi = p_rvi_100 >= gh_val_rvi  and p_rvi_50 >= p_rvi_100 and p_rvi_10 >= p_rvi_50
gh_mfi = p_mfi_100 >= gh_val_mfi  and p_mfi_50 >= p_mfi_100 and p_mfi_10 >= p_mfi_50
gh_bop = bop_sma_100 >= gh_val_bop 
gh_compund = gh_rsi and gh_rvi and gh_mfi and gh_bop ? 100:0
var float  buy_compound_f = na
if (buy_compound[1] == 100 and buy_compound == 0) //and open > close
    buy_compound_f := 1
else 
    buy_compound_f := na
ma_9 = ta.sma(low,1)
ma_10 = ta.sma(close,9)
ma_10_f = ta.falling(ma_10,4)
ma_10_r = ta.rising(ma_10,5)
co_l1 = strategy.position_avg_price*0.95
co_l2 = strategy.position_avg_price*0.90
co_l3 = strategy.position_avg_price*0.85
co_l4 = strategy.position_avg_price*0.80
sell_l1 = strategy.position_avg_price*1.15
sell_l2 = strategy.position_avg_price*1.20
sell_l3 = strategy.position_avg_price*1.25
sell_l4 = strategy.position_avg_price*1.30
crosover_f = ta.crossunder(low, co_l1) or ta.crossunder(low, co_l2) or ta.crossunder(low, co_l3) or ta.crossunder(low, co_l4) 
change_close = ((close - close[1])/close)*100
sell_l1_f = ta.crossover(ma_9, sell_l1)
sell_l2_f = ta.crossover(ma_9, sell_l2)
sell_l3_f = ta.crossover(ma_9, sell_l3)
sell_l4_f = ta.crossover(ma_9, sell_l4)
// Uptrend & Downtrend filters
upt_f = close>ta.sma(close,500)
dt_f = close<ta.sma(close,2000)
//Purchasing Quantity
var float assert = int_cap
var float quantity = 0
var float income = 0
//var float expence = 0
var float cash_in_hand = 0
//Calculation of Cumilative Profit and Assert
t_profit = 0.
expence = 0.
cost = 0.0
for i = 0 to strategy.closedtrades - 1
    entryP = strategy.closedtrades.entry_price(i)
    exitP = strategy.closedtrades.exit_price(i)
    commission = strategy.closedtrades.commission(i)
    t_profit += ((exitP - entryP ) * strategy.closedtrades.size(i)) - commission
    expence  += ((entryP + commission) * strategy.closedtrades.size(i))
var float entryP_2 = 0
if strategy.position_size > 0
    for i = 0 to 0
        entryP_2 := strategy.closedtrades.exit_price(i)
        cost += strategy.closedtrades.entry_price(i) * strategy.closedtrades.size(i)
profit_f2 = strategy.closedtrades >= 0 ? t_profit : na
var float addition = 0
if profit_f2[1] < profit_f2
    addition := (profit_f2 - profit_f2[1])
else
    addition := 0
    
var float realised_profit = 0
if (profit_f2[1] < profit_f2) or (profit_f2[1] > profit_f2)
    realised_profit := (profit_f2 - profit_f2[1])
if strategy.position_size[1] > 0 and strategy.position_size == 0
    assert := assert + addition
    
//Take profit in Market ups and bottoms
profit_f = 1.0 + (profit_cal/100)
stop_loss = 1.0 - (stop_loss_cal/100)
// intermediate sell profit ajusment
var float prc_change = 0
if (strategy.position_size[1] < strategy.position_size) and strategy.position_size[1] == 0
    prc_change := strategy.position_avg_price * profit_f 
if (strategy.position_size[1] < strategy.position_size) and strategy.position_size > 0 
    prc_change := strategy.position_avg_price * profit_f 
if (strategy.position_size[1] > strategy.position_size) and strategy.position_size > 0 
    prc_change := prc_change 
if strategy.position_size == 0
    prc_change := na
sell_crossunder = ta.crossunder(low, strategy.position_avg_price * profit_f) 
force_sell = ta.crossunder(low, strategy.position_avg_price * stop_loss)
    
//Calculation of Quantities to purchase
var int factor = 0
if (strategy.position_size[1] == 0 and strategy.position_size > 0) or (strategy.position_size [1] < strategy.position_size)
    factor := factor + 1
else if strategy.position_size[1] > 0 and strategy.position_size == 0
    factor := 0
var float assert_prc = 0
if int_val_allocation == "USDT"
    assert_prc := int_val_prc / int_cap
if int_val_allocation == "% of cumilative investment"
    assert_prc := int_val_prc/1000
    
var float assert_f = 0
var float in_cap = 0
if strategy.position_size == 0
    assert_f := assert
    in_cap := assert_prc * assert_f
else
    assert_f := assert_f
inceiment = inceiment_1/100
//formula = (1 + r)^n, r= inceiment
var float value = 0
if (strategy.opentrades == 0) 
    value := in_cap
else if (strategy.opentrades [1] < strategy.opentrades) or ((strategy.opentrades[1] > strategy.opentrades) and strategy.position_size >0)
    value := in_cap * math.pow((1+inceiment),factor)
else if (strategy.position_size[1] > 0 and strategy.position_size == 0)
    value := value
// Calculate total value of current invesment
var float cash_invest = 0
if strategy.position_size [1] < strategy.position_size or strategy.position_size [1] > strategy.position_size
    cash_invest := cash_invest + strategy.position_avg_price * (strategy.position_size - strategy.position_size[1])
else if strategy.position_size == 0
    cash_invest := 0
    
// cooldown time
var bool cd = false
if strategy.position_size[10] > 0 or strategy.position_size[9] > 0 or strategy.position_size[8] > 0 or strategy.position_size[7] > 0 or strategy.position_size[6] > 0 or strategy.position_size[5] > 0 or strategy.position_size[4] > 0 or strategy.position_size[3] > 0 or strategy.position_size[2] > 0 or strategy.position_size[1] > 0
    cd := true
else 
    cd := false
    
if (piramiding +1) > strategy.opentrades and (cash_invest + value) <= assert
    quantity := (value)/low[1]
else if (piramiding +1) > strategy.opentrades and (cash_invest + value) > assert
    quantity := (assert - cash_invest)/open
else 
    quantity := 0
// Calculate sell quantity
// defalt selling arrangement is 10 times, first short position is 5% of st. position size and increment is 11.4% 
var int sell_fac = 0
var float h_qty = 0
if (strategy.position_size [1] > strategy.position_size)
    sell_fac := sell_fac + 2
    h_qty := h_qty
else if (strategy.position_size [1] < strategy.position_size)
    sell_fac := 0
    h_qty := strategy.position_size[1] + (strategy.position_size - strategy.position_size[1])
else if strategy.position_size == 0
    h_qty := strategy.position_size
    
val = close[1]
var float sell_qty = 0.0
if (val * h_qty * (sell_qty_prc/100) * math.pow(1.114,sell_fac)) > 10 
    sell_qty := h_qty * (sell_qty_prc/100) * math.pow(1.114,sell_fac)
else if val * h_qty * (sell_qty_prc/100)*math.pow(1.114,sell_fac) < 10
    sell_qty := strategy.position_size
// or second option to purchase qty
min_qty = sell_qty_prc/close[1]
var float qty_f = 0
if prc_or_usdt == "USDT"
    qty_f := min_qty
else
    qty_f := sell_qty
// Trading 
var float limit = strategy.position_avg_price * profit_f
//Enter Coustom comand to perform buy and sell actions link with webhook
string buy_comment      =   "BUY" 
string sell_comment     =   "SELL" 
//Uptrend trading 
if ((buySignal == true)) and window() and cd == false and strategy.position_size == 0 and trading_option == 'Uptrend trading'
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
else if ((signal == 2)  and ma_9 < strategy.position_avg_price *.99 and window() and  strategy.position_size > 0 )  and trading_option == 'Uptrend trading' and use_cb_to_average == true
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
else if (signal == 2) and high[1] < strategy.position_avg_price and strategy.position_size > 0  and  trading_option == 'Uptrend trading' and use_cb_to_average == true
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
else if ((buySignal == true)  and ma_9 < strategy.position_avg_price *.99 and window() and  strategy.position_size > 0 )  and trading_option == 'Uptrend trading' and use_cb_to_average == false
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
else if (buySignal == true) and high[1] < strategy.position_avg_price and strategy.position_size > 0  and  trading_option == 'Uptrend trading' and use_cb_to_average == false
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
// Downtrend general purchase
if ((signal == 2 or buy_compound_f ==1)) and window() and cd == false and strategy.position_size == 0 and trading_option == 'Up and Down Trend trading'
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
else if ((buy_compound_f ==1 or crosover_f or (b1 ==1 or b2 ==1 or b3==1))  and ma_9 < strategy.position_avg_price *.99 and window() and  strategy.position_size > 0 and ma_10_f)  and trading_option == 'Up and Down Trend trading'
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
else if signal == 2 and high[1] < strategy.position_avg_price and strategy.position_size >= 1  and trading_option == 'Up and Down Trend trading'
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
    
//Downtrend Grid Trading
if ((signal == 2 or buy_compound_f ==1)) and window() and cd == false and strategy.position_size == 0 and trading_option == 'Grid Trading'
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
else if trading_option == 'Grid Trading' and (buy_possition_1 == true or buy_possition_2 == true or buy_possition_3 == true or buy_possition_4 == true or buy_possition_5 == true or  buy_possition_6 == true or buy_possition_7 == true or buy_possition_8 == true or buy_possition_9 == true or buy_possition_10 == true or buy_possition_11 == true or buy_possition_12 == true or buy_possition_13 == true or buy_possition_14 == true or buy_possition_15 == true or buy_possition_16 == true or buy_possition_17 == true or buy_possition_18 == true or buy_possition_19 == true or buy_possition_20 == true or buy_possition_21 == true or buy_possition_22 == true or buy_possition_23 == true or buy_possition_24 == true or buy_possition_25 == true or buy_possition_26 == true or buy_possition_27 == true or buy_possition_28 == true or buy_possition_29 == true or buy_possition_30 == true or buy_possition_31 == true or buy_possition_32 == true or buy_possition_33 == true or buy_possition_34 == true or buy_possition_35 == true or buy_possition_36 == true or buy_possition_37 == true or buy_possition_38 == true or buy_possition_39 == true or buy_possition_40 == true or buy_possition_41 == true or buy_possition_42 == true or buy_possition_43 == true or buy_possition_44 == true or buy_possition_45 == true or buy_possition_46 == true or buy_possition_47 == true or buy_possition_48 == true or buy_possition_49 == true)
    strategy.entry("long", strategy.long, comment = buy_comment, qty = quantity)
//general selling arrangement
if (comp_sell1 or op_sell1 or op_sell2 or op_sell3 or op_sell4 or sell_crossunder) and window() and prc_change < ma_9 and strategy.opentrades >= 8 and (trading_option == 'Grid Trading' or trading_option == 'Up and Down Trend trading')
    strategy.close("long", comment = sell_comment)
else if (gh_compund ==100) and window() and prc_change < ma_9 and strategy.opentrades < 8 and (trading_option == 'Grid Trading' or trading_option == 'Up and Down Trend trading')
    strategy.close("long", comment = sell_comment)
else if force_sell and strategy.opentrades >= piramiding*0.9 and enable_stoploss == true and (trading_option == 'Grid Trading' or trading_option == 'Up and Down Trend trading')
    strategy.close("long", comment = sell_comment)
    
//Up trend selling arrangement
if (sellSignal == true or comp_sell1 or op_sell1 or op_sell2 or op_sell3 or op_sell4 or sell_crossunder) and window() and prc_change <= ma_9 and trading_option == 'Uptrend trading'
    strategy.close("long", comment = sell_comment)
//Intermidiate selling
else if ((close > strategy.position_avg_price) or gh_compund ==100 )and cd == false and enable_int_profit == true
    strategy.exit("EXIT", "long", profit = prc_change, qty = qty_f, comment = sell_comment)
//Graphs
bool PM_visible                 = input(true,   "Show Expected Profit, Stop Loss and Average Cost",         group = 'Safty Margins')
bool SM_visible                 = input(false,  "Show Safty Grids",                                         group = 'Safty Margins')
bool gmb_visible                = input(true,   "Show General Market Ups and Bottoms",                      group = 'Indicators')
bool cmb_visible                = input(true,   "Show Critical Market Ups and Bottoms",                     group = 'Indicators')
bool profit_f2_visible          = input(false,  "Show Cumilative Profit (USDT) Graph",                      group = 'Graphs')
bool cash_invest_visible        = input(false,  "Show Total Value of Current Invesment (USDT) Graph",       group = 'Graphs')
bool realised_profit_visible    = input(false,  "Show Last realised profit (USDT Graph",                    group = 'Graphs')
bool assert_visible             = input(false,  "Show Cumilative Assert (USDT)Graph",                       group = 'Graphs')
bool grid_plot_visible          = input(false,  "Show Grids of Grid Trading",                               group = 'Graphs')
color_1 = color.blue
color_2 = color.blue
color_3 = color.blue
color_4 = color.blue
if profit_f2_visible == true
    color_1 := color.new(#e6d32a,0)
else
    color_1 := color.new(color.blue,100)
    
if realised_profit_visible == true
    color_2 := color.new(color.blue,0)
else
    color_2 := color.new(color.blue,100)
if cash_invest_visible == true
    color_3 := color.new(color.maroon,0)
else
    color_3 := color.new(color.blue,100)
    
if assert_visible == true
    color_4 := color.new(color.blue,0)
else
    color_4 := color.new(color.blue,100)    
    
var max_open_trades = 0
if strategy.opentrades > max_open_trades
    max_open_trades := strategy.opentrades
else
    max_open_trades := max_open_trades
    
var color_average_cost = color.green
if dt_grid_trading == true
    color_average_cost := color.white
else
    color_average_cost := color.green
    
var float up_f = 0
var float dn_f = 0
if trading_option == 'Uptrend trading'
    up_f := up
    dn_f := dn
else
    up_f := na
    dn_f := na
var float showsignals_f_buy = 0
var float showsignals_f_sell = 0
if showsignals == true and close < strategy.position_avg_price and buySignal
    showsignals_f_buy := 1
if showsignals == true and prc_change <= ma_9 and sellSignal == true
    showsignals_f_sell := 1
else
    showsignals_f_buy := 0
    showsignals_f_sell := 0
    
plot(PM_visible ? strategy.position_avg_price : na,                                                             color = color_average_cost,     title = "Average Cost",             style = plot.style_circles)
plot(PM_visible ? prc_change:na,                                                                                color = color.olive,            title = "Expected Profit Level",    style = plot.style_circles)
plot(PM_visible and strategy.opentrades >= piramiding*0.9 ? strategy.position_avg_price * stop_loss  : na,      color = color.red,              title = "Stop Loss%",               style = plot.style_circles)
plot(profit_f2,                                                         color = color_1,      linewidth = 4,    style = plot.style_stepline_diamond,        title = "Cumilative Profit (USDT)")
plot(realised_profit,                                                   color = color_2,                                                                    title = "Last realised profit (USDT)")
plot(cash_invest,                                                       color = color_3,      linewidth = 4,    style = plot.style_stepline_diamond,        title = "Total Value of Current Invesment (USDT)")
plot(assert,                                                            color = color_4,                                                                    title = "Cumilative Assert (USDT)")
plot(value,                                                             color = color.new(color.white,100),     title = "Value of next Purchase (USDT)")
plot(strategy.position_size,                                            color = color.new(color.white,100),     title = "Strategy Position Size")
plot(quantity,                                                          color = color.new(color.white,100),     title = "Quantity to be Purchase")
plot(strategy.opentrades,                                               color = color.new(color.white,100),     title = "Count of Open Trades")
plot(max_open_trades,                                                   color = color.new(color.green,100),     title = "Maximum Count of Open Trades")
//Graphs & shapes for uptrend trading
plot(trend == 1 and trading_option == 'Uptrend trading'?                                up_f : na,    title  = 'Up Trend for Up trend trading',        color = color.new(color.green, 0), style = plot.style_linebr)
plot(trend == 1 and trading_option == 'Uptrend trading'?                                na : dn_f,    title  = 'Down Trend for Up trend trading',      color = color.new(color.red, 0),   style = plot.style_linebr)
plotshape(buySignal == true and trading_option == "Uptrend trading"?                            up_f : na,  title = 'UpTrend Begins for Up trend trading',                   location=location.absolute, style=shape.circle,     size=size.tiny,     color=color.new(color.green, 50))
plotshape(sellSignal == true and trading_option == "Uptrend trading"?                           dn_f : na,  title = 'DownTrend Begins for Up trend trading',                 location=location.absolute, style=shape.circle,     size=size.tiny,     color=color.new(color.red, 50))
plotshape(buySignal == true and showsignals_f_buy == 1?                                                       up_f : na,  title = 'Buy for Up trend trading',              text='Buy',     location=location.absolute, style=shape.labelup,    size=size.tiny,     color=color.new(color.green, 0),    textcolor=color.new(color.white, 0))
plotshape(showsignals_f_sell == 1?                                                      dn_f : na,  title = 'Sell for Up trend trading',             text='Sell',    location=location.absolute, style=shape.labeldown,  size=size.tiny,     color=color.new(color.red, 0),      textcolor=color.new(color.white, 0))
//Graphs & shapes for up & Down trend trading
plot(ST_visible ? down_trend:na,                                        color = plotcolor2,     title = "Down Trend for Up & Down trend trading",           linewidth=1)
plot(ST_visible ? up_trend: na ,                                        color = plotcolor3,     title = "Up Trend for Up & Down trend trading",             linewidth=1)
plot(sar_visible ? sar:na,                                              color = plotcolor4,     title = 'SAR for Up & Down trend trading',                  linewidth=1)
plot(sma500_visible ? SMA500:na,                                        color = plotcolor5,     title = 'SMA500 for Up & Down trend trading',               linewidth=2)
plot(show_LL_HH == true ? b:na,                                         color = color.orange,   title = "Lower lows for Up & Down trend trading" )
plot(show_LL_HH == true ? e:na,                                         color = color.white,    title = "Higher highes for Up & Down trend trading")
plotshape((buy_compound_f   ==1     and ma_9 < strategy.position_avg_price and gmb_visible == true),            style =  shape.arrowdown, color = color.new(color.yellow,50),     size = size.large,      text = "GB",                            title = "GB Label")
plotshape((gh_compund       ==100   and ma_9 > strategy.position_avg_price* profit_f and gmb_visible == true),  style =  shape.arrowdown, color = color.new(color.green,50),      size = size.large,      text = "GU",                            title = "GU Label")
plotshape((cb_compound      ==100   and ma_9 < strategy.position_avg_price and cmb_visible == true),            style =  shape.labeldown, color = color.new(color.green,90),      size = size.normal,     text = "DN", textcolor = color.white,   title = "DN Label")
plotshape((hh_compund       ==100   and cmb_visible == true),                                                   style =  shape.labeldown, color = color.new(color.red,90),        size = size.normal,     text = "UP", textcolor = color.white,   title = "UP Label")
//Graphs for Grid Trading
plot(dt_grid_trading == true and grid_plot_visible == true ? level1:na,    title  = "Drop level - 1",  color = color.new(color.green,10), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level2:na,    title  = "Drop level - 2",  color = color.new(color.green,20), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level3:na,    title  = "Drop level - 3",  color = color.new(color.green,30), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level4:na,    title  = "Drop level - 4",  color = color.new(color.green,40), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level5:na,    title  = "Drop level - 5",  color = color.new(color.green,50), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level6:na,    title  = "Drop level - 6",  color = color.new(color.green,55), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level7:na,    title  = "Drop level - 7",  color = color.new(color.green,60), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level8:na,    title  = "Drop level - 8",  color = color.new(color.green,65), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level9:na,    title  = "Drop level - 9",  color = color.new(color.green,70), style = plot.style_circles)
plot(dt_grid_trading == true and grid_plot_visible == true ? level10:na,   title  = "Drop level - 10", color = color.new(color.green,80), style = plot.style_circles)
//Table
var tbl = table.new(position.top_right, 2, 9, frame_color=#151715, frame_width=1, border_width=2, border_color=color.new(color.white, 100))
//column values
table.cell(tbl, 0,0, text = "Cumilative profit (USDT)",                                                 text_color = color.white,       text_halign = text.align_left,      text_valign  = text.align_center, bgcolor = color.green)
table.cell(tbl, 0,1, text = "Cumilative assert (USDT)",                                                 text_color = color.red,         text_halign = text.align_left,      text_valign  = text.align_center)
table.cell(tbl, 0,2, text = "Average cost (USDT)",                                                      text_color = color.red,         text_halign = text.align_left,      text_valign  = text.align_center)
table.cell(tbl, 0,3, text = "Expected profit (USDT)",                                                   text_color = color.red,         text_halign = text.align_left,      text_valign  = text.align_center)
table.cell(tbl, 0,4, text = "Current investment (USDT)",                                                text_color = color.red,         text_halign = text.align_left,      text_valign  = text.align_center)
table.cell(tbl, 0,5, text = "Next purchase (USDT)",                                                     text_color = color.red,         text_halign = text.align_left,      text_valign  = text.align_center)
table.cell(tbl, 0,6, text = "Count of open trades",                                                     text_color = color.red,         text_halign = text.align_left,      text_valign  = text.align_center)
table.cell(tbl, 0,7, text = "Strategy position Size",                                                   text_color = color.red,         text_halign = text.align_left,      text_valign  = text.align_center)
    
table.cell(tbl, 1,0, str.tostring(profit_f2, format.mintick),                                           text_color = color.white,       text_halign = text.align_right,     text_valign  = text.align_center, bgcolor = color.green)
table.cell(tbl, 1,1, str.tostring(assert, format.mintick),                                              text_color = color.red,         text_halign = text.align_right,     text_valign  = text.align_center)
table.cell(tbl, 1,2, str.tostring(strategy.position_avg_price, format.mintick),                         text_color = color.red,         text_halign = text.align_right,     text_valign  = text.align_center)
table.cell(tbl, 1,3, str.tostring((strategy.position_avg_price * profit_f), format.mintick),            text_color = color.red,         text_halign = text.align_right,     text_valign  = text.align_center)
table.cell(tbl, 1,4, str.tostring(cash_invest, format.mintick), text_color = color.red,                 text_halign = text.align_right, text_valign  = text.align_center)
table.cell(tbl, 1,5, str.tostring(value, format.mintick), text_color = color.red,                       text_halign = text.align_right, text_valign  = text.align_center)
table.cell(tbl, 1,6, str.tostring(strategy.opentrades, format.mintick), text_color = color.red,         text_halign = text.align_right, text_valign  = text.align_center)
table.cell(tbl, 1,7, str.tostring(strategy.position_size, format.mintick), text_color = color.red,      text_halign = text.align_right, text_valign  = text.align_center)
Expand (1691 lines)