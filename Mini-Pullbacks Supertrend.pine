Script Name: Mini-Pullbacks Supertrend
Author: VILIO_Trading
Description: This WOP script is trying to check the pullbacks in a trend and open a position when the pullback is finishing
PineScript code:

Pine Script™ strategy
Mini-Pullbacks Supertrend
Copy code
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
//@version=5
strategy(title="Villa Mini Pullback", overlay = true, calc_on_every_tick = true)
//variables
not_in_trade = strategy.position_size == 0
///emas var
ema_src = input.source(close, "EMA Source")
ema_1 = input.int(42, 'EMA 1 len')
ema_2 = input(66, 'EMA 2 len')
ema_3 = input(200, 'EMA 3 len')
///macd var
mac_src = input.source(open, "MACD Source")
mac_1 = input.int(24, 'MACD Fast')
mac_2 = input.int(29, 'MACD Signal')
mac_3 = input.int(13, 'MACD Histogram')
///rsi var
rsi_src = input.source(high, "RSI Source")
rsi_len = input.int(15, 'RSI Len')
///stoch var
smoothK = input.int(1, "K", minval=1)
smoothD = input.int(4, "D", minval=1)
lengthRSI = input.int(14, "RSI Length", minval=1)
lengthStoch = input.int(14, "Stochastic Length", minval=1)
stoch_src = input(close, title="RSI Source Stoch")
///dmi
dmi_filter = input.int(25, "DMI Line Filter")
//usage variables
ema_b = input.bool(true, "Use EMA Filter")
rsi_b = input.bool(true, "Use RSI Filter")
macd_b = input.bool(true, "Use MACD Filter")
adx_b = input.bool(false, "Use DMI Filter")
st_sig = input.bool(false, "Trade all ST")
atr_sl = input.float(1.5, "ATR SL multiplier")
atr_tp = input.float(3, "ATR TP multiplier")
atr_sl_tp_src = input.source(close, "SL & TP Src")
//emaas
ema1 = ta.ema(ema_src, ema_1)
ema2 = ta.ema(ema_src, ema_2)
ema3 = ta.ema(ema_src, ema_3)
//macd
[macdLine, signalLine, histLine] = ta.macd(mac_src, mac_1, mac_2, mac_3)
//rsi
rsi = ta.rsi(rsi_src, rsi_len)
//stoch
rsi1 = ta.rsi(stoch_src, lengthRSI)
k = ta.sma(ta.stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = ta.sma(k, smoothD)
//supertrend
Periods = input.int(14, "ATR Period")
src_st = input.source(hl2, "Supertrend Source")
Multiplier = input.float(2.0 , "ATR Multiplier")
changeATR= input.bool(true, "Change ATR Calculation Method ?")
showsignals = input.bool(true, "Show Buy/Sell Signals ?")
highlighting = input.bool(true, "Highlighter On/Off ?")
atr2 = ta.sma(ta.tr, Periods)
atr3= changeATR ? ta.atr(Periods) : atr2
up=src_st-(Multiplier*atr3)
up1 = nz(up[1],up)
up := close[1] > up1 ? math.max(up,up1) : up
dn=src_st+(Multiplier*atr3)
dn1 = nz(dn[1], dn)
dn := close[1] < dn1 ? math.min(dn, dn1) : dn
trend = 1
trend := nz(trend[1], trend)
trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend
buySignal = trend == 1 and trend[1] == -1
sellSignal = trend == -1 and trend[1] == 1
//conditions
///buy
[diplus, diminus, adx] = ta.dmi(14, 14)
dmi_cond = if adx_b
    adx >= dmi_filter
else
    true
    
rsi_cond_b = if rsi_b
    rsi >= 50
else 
    true
macd_cond_b = if macd_b
    (histLine >= 0 or histLine > histLine[1])
else
    true
ema_cond_b = if ema_b
    (ema1 > ema2 and ema2 > ema3)
else 
    true
look_for = input.int(5, "Bars from cross to signal")
stoch_signal_sum = 0
for i = 0 to (look_for)
    if k[i] > d[i] and k[i + 1] < d[i + 1] and (k[i + 1] < 30 and d[i + 1] < 30)
        stoch_signal_sum := stoch_signal_sum + 1
        
stoch_cond_b = if stoch_signal_sum > 0
    if k > 80 and d > 80
        false
    else
        true
else
    false
st_sig_b = if st_sig
    trend == 1
else 
    false
    
sup_cond_b = buySignal or st_sig_b
buy_sig = (rsi_cond_b and macd_cond_b and ema_cond_b and stoch_cond_b and sup_cond_b and dmi_cond and not_in_trade)
atr_f_exit = ta.atr(14)
tp_b = atr_sl_tp_src + (atr_f_exit * atr_tp)
sl_b = atr_sl_tp_src - (atr_f_exit * atr_sl)
if (buy_sig)
    strategy.entry("long", strategy.long)
    strategy.exit("exit", "long", stop = sl_b, limit = tp_b)
//plot(tp_b)
//plot(sl_b)
///sell
////rsi condition
rsi_cond_s = if rsi_b
    rsi <= 50
else 
    true
macd_cond_s = if macd_b
    (histLine <= 0 or histLine < histLine[1])
else
    true
ema_cond_s = if ema_b
    (ema1 < ema2 and ema2 < ema3)
else 
    true
stoch_signal_sum_s = 0
for i = 0 to (look_for)
    if k[i] < d[i] and k[i + 1] > d[i + 1] and (k[i + 1] > 70 and d[i + 1] > 70)
        stoch_signal_sum_s := stoch_signal_sum_s + 1
        
stoch_cond_s = if stoch_signal_sum_s > 0
    if k < 20 and d < 20
        false
    else
        true
else
    false
st_sig_s = if st_sig
    trend == -1
else
    false
sup_cond_s = sellSignal or st_sig_s
sell_sig = (rsi_cond_s and macd_cond_s and ema_cond_s and stoch_cond_s and sup_cond_s and dmi_cond and not_in_trade)
tp_s = atr_sl_tp_src - (atr_f_exit * atr_tp)
sl_s = atr_sl_tp_src + (atr_f_exit * atr_sl)
if (sell_sig)
    strategy.entry("short", strategy.short)
    strategy.exit("exit", "short", stop = sl_s, limit = tp_s)
//plot(tp_s, color = color.orange)
//plot(sl_s, color = color.orange)
Expand (205 lines)